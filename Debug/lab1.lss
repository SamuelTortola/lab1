
AVRASM ver. 2.2.8  D:\samue\Escritorio\OneDrive - UVG\UVG\Año 2024\Semestre 1\Progra micros\Practicas\Lab1. sumador 4 bits\lab1\main.asm Wed Jan 31 22:46:54 2024

[builtin](2): Including file 'D:/Programas\Microchip studio\7.0\Packs\Atmel\ATmega_DFP\2.1.506\avrasm\inc\m328Pdef.inc'
D:\samue\Escritorio\OneDrive - UVG\UVG\Año 2024\Semestre 1\Progra micros\Practicas\Lab1. sumador 4 bits\lab1\main.asm(17): Including file 'D:/Programas\Microchip studio\7.0\Packs\Atmel\ATmega_DFP\2.1.506\avrasm\inc\M328PDEF.inc'
[builtin](2): Including file 'D:/Programas\Microchip studio\7.0\Packs\Atmel\ATmega_DFP\2.1.506\avrasm\inc\m328Pdef.inc'
D:\samue\Escritorio\OneDrive - UVG\UVG\Año 2024\Semestre 1\Progra micros\Practicas\Lab1. sumador 4 bits\lab1\main.asm(17): Including file 'D:/Programas\Microchip studio\7.0\Packs\Atmel\ATmega_DFP\2.1.506\avrasm\inc\M328PDEF.inc'
                                 
                                 ;******************************************************************************
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega328P.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m328Pdef.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega328P
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega328P
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M328PDEF_INC_
                                 #define _M328PDEF_INC_
                                 
                                 
                                 #pragma partinc 0
                                 
                                 ; ***** SPECIFY DEVICE ***************************************************
                                 .device ATmega328P
                                 #pragma AVRPART ADMIN PART_NAME ATmega328P
                                 .equ	SIGNATURE_000	= 0x1e
                                 .equ	SIGNATURE_001	= 0x95
                                 .equ	SIGNATURE_002	= 0x0f
                                 
                                 #pragma AVRPART CORE CORE_VERSION V2E
                                 
                                 
                                 ; ***** I/O REGISTER DEFINITIONS *****************************************
                                 ; NOTE:
                                 ; Definitions marked "MEMORY MAPPED"are extended I/O ports
                                 ; and cannot be used with IN/OUT instructions
                                 .equ	UDR0	= 0xc6	; MEMORY MAPPED
                                 .equ	UBRR0L	= 0xc4	; MEMORY MAPPED
                                 .equ	UBRR0H	= 0xc5	; MEMORY MAPPED
                                 .equ	UCSR0C	= 0xc2	; MEMORY MAPPED
                                 .equ	UCSR0B	= 0xc1	; MEMORY MAPPED
                                 .equ	UCSR0A	= 0xc0	; MEMORY MAPPED
                                 .equ	TWAMR	= 0xbd	; MEMORY MAPPED
                                 .equ	TWCR	= 0xbc	; MEMORY MAPPED
                                 .equ	TWDR	= 0xbb	; MEMORY MAPPED
                                 .equ	TWAR	= 0xba	; MEMORY MAPPED
                                 .equ	TWSR	= 0xb9	; MEMORY MAPPED
                                 .equ	TWBR	= 0xb8	; MEMORY MAPPED
                                 .equ	ASSR	= 0xb6	; MEMORY MAPPED
                                 .equ	OCR2B	= 0xb4	; MEMORY MAPPED
                                 .equ	OCR2A	= 0xb3	; MEMORY MAPPED
                                 .equ	TCNT2	= 0xb2	; MEMORY MAPPED
                                 .equ	TCCR2B	= 0xb1	; MEMORY MAPPED
                                 .equ	TCCR2A	= 0xb0	; MEMORY MAPPED
                                 .equ	OCR1BL	= 0x8a	; MEMORY MAPPED
                                 .equ	OCR1BH	= 0x8b	; MEMORY MAPPED
                                 .equ	OCR1AL	= 0x88	; MEMORY MAPPED
                                 .equ	OCR1AH	= 0x89	; MEMORY MAPPED
                                 .equ	ICR1L	= 0x86	; MEMORY MAPPED
                                 .equ	ICR1H	= 0x87	; MEMORY MAPPED
                                 .equ	TCNT1L	= 0x84	; MEMORY MAPPED
                                 .equ	TCNT1H	= 0x85	; MEMORY MAPPED
                                 .equ	TCCR1C	= 0x82	; MEMORY MAPPED
                                 .equ	TCCR1B	= 0x81	; MEMORY MAPPED
                                 .equ	TCCR1A	= 0x80	; MEMORY MAPPED
                                 .equ	DIDR1	= 0x7f	; MEMORY MAPPED
                                 .equ	DIDR0	= 0x7e	; MEMORY MAPPED
                                 .equ	ADMUX	= 0x7c	; MEMORY MAPPED
                                 .equ	ADCSRB	= 0x7b	; MEMORY MAPPED
                                 .equ	ADCSRA	= 0x7a	; MEMORY MAPPED
                                 .equ	ADCH	= 0x79	; MEMORY MAPPED
                                 .equ	ADCL	= 0x78	; MEMORY MAPPED
                                 .equ	TIMSK2	= 0x70	; MEMORY MAPPED
                                 .equ	TIMSK1	= 0x6f	; MEMORY MAPPED
                                 .equ	TIMSK0	= 0x6e	; MEMORY MAPPED
                                 .equ	PCMSK1	= 0x6c	; MEMORY MAPPED
                                 .equ	PCMSK2	= 0x6d	; MEMORY MAPPED
                                 .equ	PCMSK0	= 0x6b	; MEMORY MAPPED
                                 .equ	EICRA	= 0x69	; MEMORY MAPPED
                                 .equ	PCICR	= 0x68	; MEMORY MAPPED
                                 .equ	OSCCAL	= 0x66	; MEMORY MAPPED
                                 .equ	PRR	= 0x64	; MEMORY MAPPED
                                 .equ	CLKPR	= 0x61	; MEMORY MAPPED
                                 .equ	WDTCSR	= 0x60	; MEMORY MAPPED
                                 .equ	SREG	= 0x3f
                                 .equ	SPL	= 0x3d
                                 .equ	SPH	= 0x3e
                                 .equ	SPMCSR	= 0x37
                                 .equ	MCUCR	= 0x35
                                 .equ	MCUSR	= 0x34
                                 .equ	SMCR	= 0x33
                                 .equ	ACSR	= 0x30
                                 .equ	SPDR	= 0x2e
                                 .equ	SPSR	= 0x2d
                                 .equ	SPCR	= 0x2c
                                 .equ	GPIOR2	= 0x2b
                                 .equ	GPIOR1	= 0x2a
                                 .equ	OCR0B	= 0x28
                                 .equ	OCR0A	= 0x27
                                 .equ	TCNT0	= 0x26
                                 .equ	TCCR0B	= 0x25
                                 .equ	TCCR0A	= 0x24
                                 .equ	GTCCR	= 0x23
                                 .equ	EEARH	= 0x22
                                 .equ	EEARL	= 0x21
                                 .equ	EEDR	= 0x20
                                 .equ	EECR	= 0x1f
                                 .equ	GPIOR0	= 0x1e
                                 .equ	EIMSK	= 0x1d
                                 .equ	EIFR	= 0x1c
                                 .equ	PCIFR	= 0x1b
                                 .equ	TIFR2	= 0x17
                                 .equ	TIFR1	= 0x16
                                 .equ	TIFR0	= 0x15
                                 .equ	PORTD	= 0x0b
                                 .equ	DDRD	= 0x0a
                                 .equ	PIND	= 0x09
                                 .equ	PORTC	= 0x08
                                 .equ	DDRC	= 0x07
                                 .equ	PINC	= 0x06
                                 .equ	PORTB	= 0x05
                                 .equ	DDRB	= 0x04
                                 .equ	PINB	= 0x03
                                 
                                 
                                 ; ***** BIT DEFINITIONS **************************************************
                                 
                                 ; ***** USART0 ***********************
                                 ; UDR0 - USART I/O Data Register
                                 .equ	UDR0_0	= 0	; USART I/O Data Register bit 0
                                 .equ	UDR0_1	= 1	; USART I/O Data Register bit 1
                                 .equ	UDR0_2	= 2	; USART I/O Data Register bit 2
                                 .equ	UDR0_3	= 3	; USART I/O Data Register bit 3
                                 .equ	UDR0_4	= 4	; USART I/O Data Register bit 4
                                 .equ	UDR0_5	= 5	; USART I/O Data Register bit 5
                                 .equ	UDR0_6	= 6	; USART I/O Data Register bit 6
                                 .equ	UDR0_7	= 7	; USART I/O Data Register bit 7
                                 
                                 ; UCSR0A - USART Control and Status Register A
                                 .equ	MPCM0	= 0	; Multi-processor Communication Mode
                                 .equ	U2X0	= 1	; Double the USART transmission speed
                                 .equ	UPE0	= 2	; Parity Error
                                 .equ	DOR0	= 3	; Data overRun
                                 .equ	FE0	= 4	; Framing Error
                                 .equ	UDRE0	= 5	; USART Data Register Empty
                                 .equ	TXC0	= 6	; USART Transmitt Complete
                                 .equ	RXC0	= 7	; USART Receive Complete
                                 
                                 ; UCSR0B - USART Control and Status Register B
                                 .equ	TXB80	= 0	; Transmit Data Bit 8
                                 .equ	RXB80	= 1	; Receive Data Bit 8
                                 .equ	UCSZ02	= 2	; Character Size
                                 .equ	TXEN0	= 3	; Transmitter Enable
                                 .equ	RXEN0	= 4	; Receiver Enable
                                 .equ	UDRIE0	= 5	; USART Data register Empty Interrupt Enable
                                 .equ	TXCIE0	= 6	; TX Complete Interrupt Enable
                                 .equ	RXCIE0	= 7	; RX Complete Interrupt Enable
                                 
                                 ; UCSR0C - USART Control and Status Register C
                                 .equ	UCPOL0	= 0	; Clock Polarity
                                 .equ	UCSZ00	= 1	; Character Size
                                 .equ	UCPHA0	= UCSZ00	; For compatibility
                                 .equ	UCSZ01	= 2	; Character Size
                                 .equ	UDORD0	= UCSZ01	; For compatibility
                                 .equ	USBS0	= 3	; Stop Bit Select
                                 .equ	UPM00	= 4	; Parity Mode Bit 0
                                 .equ	UPM01	= 5	; Parity Mode Bit 1
                                 .equ	UMSEL00	= 6	; USART Mode Select
                                 .equ	UMSEL0	= UMSEL00	; For compatibility
                                 .equ	UMSEL01	= 7	; USART Mode Select
                                 .equ	UMSEL1	= UMSEL01	; For compatibility
                                 
                                 ; UBRR0H - USART Baud Rate Register High Byte
                                 .equ	UBRR8	= 0	; USART Baud Rate Register bit 8
                                 .equ	UBRR9	= 1	; USART Baud Rate Register bit 9
                                 .equ	UBRR10	= 2	; USART Baud Rate Register bit 10
                                 .equ	UBRR11	= 3	; USART Baud Rate Register bit 11
                                 
                                 ; UBRR0L - USART Baud Rate Register Low Byte
                                 .equ	_UBRR0	= 0	; USART Baud Rate Register bit 0
                                 .equ	_UBRR1	= 1	; USART Baud Rate Register bit 1
                                 .equ	UBRR2	= 2	; USART Baud Rate Register bit 2
                                 .equ	UBRR3	= 3	; USART Baud Rate Register bit 3
                                 .equ	UBRR4	= 4	; USART Baud Rate Register bit 4
                                 .equ	UBRR5	= 5	; USART Baud Rate Register bit 5
                                 .equ	UBRR6	= 6	; USART Baud Rate Register bit 6
                                 .equ	UBRR7	= 7	; USART Baud Rate Register bit 7
                                 
                                 
                                 ; ***** TWI **************************
                                 ; TWAMR - TWI (Slave) Address Mask Register
                                 .equ	TWAM0	= 1	; 
                                 .equ	TWAMR0	= TWAM0	; For compatibility
                                 .equ	TWAM1	= 2	; 
                                 .equ	TWAMR1	= TWAM1	; For compatibility
                                 .equ	TWAM2	= 3	; 
                                 .equ	TWAMR2	= TWAM2	; For compatibility
                                 .equ	TWAM3	= 4	; 
                                 .equ	TWAMR3	= TWAM3	; For compatibility
                                 .equ	TWAM4	= 5	; 
                                 .equ	TWAMR4	= TWAM4	; For compatibility
                                 .equ	TWAM5	= 6	; 
                                 .equ	TWAMR5	= TWAM5	; For compatibility
                                 .equ	TWAM6	= 7	; 
                                 .equ	TWAMR6	= TWAM6	; For compatibility
                                 
                                 ; TWBR - TWI Bit Rate register
                                 .equ	TWBR0	= 0	; 
                                 .equ	TWBR1	= 1	; 
                                 .equ	TWBR2	= 2	; 
                                 .equ	TWBR3	= 3	; 
                                 .equ	TWBR4	= 4	; 
                                 .equ	TWBR5	= 5	; 
                                 .equ	TWBR6	= 6	; 
                                 .equ	TWBR7	= 7	; 
                                 
                                 ; TWCR - TWI Control Register
                                 .equ	TWIE	= 0	; TWI Interrupt Enable
                                 .equ	TWEN	= 2	; TWI Enable Bit
                                 .equ	TWWC	= 3	; TWI Write Collition Flag
                                 .equ	TWSTO	= 4	; TWI Stop Condition Bit
                                 .equ	TWSTA	= 5	; TWI Start Condition Bit
                                 .equ	TWEA	= 6	; TWI Enable Acknowledge Bit
                                 .equ	TWINT	= 7	; TWI Interrupt Flag
                                 
                                 ; TWSR - TWI Status Register
                                 .equ	TWPS0	= 0	; TWI Prescaler
                                 .equ	TWPS1	= 1	; TWI Prescaler
                                 .equ	TWS3	= 3	; TWI Status
                                 .equ	TWS4	= 4	; TWI Status
                                 .equ	TWS5	= 5	; TWI Status
                                 .equ	TWS6	= 6	; TWI Status
                                 .equ	TWS7	= 7	; TWI Status
                                 
                                 ; TWDR - TWI Data register
                                 .equ	TWD0	= 0	; TWI Data Register Bit 0
                                 .equ	TWD1	= 1	; TWI Data Register Bit 1
                                 .equ	TWD2	= 2	; TWI Data Register Bit 2
                                 .equ	TWD3	= 3	; TWI Data Register Bit 3
                                 .equ	TWD4	= 4	; TWI Data Register Bit 4
                                 .equ	TWD5	= 5	; TWI Data Register Bit 5
                                 .equ	TWD6	= 6	; TWI Data Register Bit 6
                                 .equ	TWD7	= 7	; TWI Data Register Bit 7
                                 
                                 ; TWAR - TWI (Slave) Address register
                                 .equ	TWGCE	= 0	; TWI General Call Recognition Enable Bit
                                 .equ	TWA0	= 1	; TWI (Slave) Address register Bit 0
                                 .equ	TWA1	= 2	; TWI (Slave) Address register Bit 1
                                 .equ	TWA2	= 3	; TWI (Slave) Address register Bit 2
                                 .equ	TWA3	= 4	; TWI (Slave) Address register Bit 3
                                 .equ	TWA4	= 5	; TWI (Slave) Address register Bit 4
                                 .equ	TWA5	= 6	; TWI (Slave) Address register Bit 5
                                 .equ	TWA6	= 7	; TWI (Slave) Address register Bit 6
                                 
                                 
                                 ; ***** TIMER_COUNTER_1 **************
                                 ; TIMSK1 - Timer/Counter Interrupt Mask Register
                                 .equ	TOIE1	= 0	; Timer/Counter1 Overflow Interrupt Enable
                                 .equ	OCIE1A	= 1	; Timer/Counter1 Output CompareA Match Interrupt Enable
                                 .equ	OCIE1B	= 2	; Timer/Counter1 Output CompareB Match Interrupt Enable
                                 .equ	ICIE1	= 5	; Timer/Counter1 Input Capture Interrupt Enable
                                 
                                 ; TIFR1 - Timer/Counter Interrupt Flag register
                                 .equ	TOV1	= 0	; Timer/Counter1 Overflow Flag
                                 .equ	OCF1A	= 1	; Output Compare Flag 1A
                                 .equ	OCF1B	= 2	; Output Compare Flag 1B
                                 .equ	ICF1	= 5	; Input Capture Flag 1
                                 
                                 ; TCCR1A - Timer/Counter1 Control Register A
                                 .equ	WGM10	= 0	; Waveform Generation Mode
                                 .equ	WGM11	= 1	; Waveform Generation Mode
                                 .equ	COM1B0	= 4	; Compare Output Mode 1B, bit 0
                                 .equ	COM1B1	= 5	; Compare Output Mode 1B, bit 1
                                 .equ	COM1A0	= 6	; Comparet Ouput Mode 1A, bit 0
                                 .equ	COM1A1	= 7	; Compare Output Mode 1A, bit 1
                                 
                                 ; TCCR1B - Timer/Counter1 Control Register B
                                 .equ	CS10	= 0	; Prescaler source of Timer/Counter 1
                                 .equ	CS11	= 1	; Prescaler source of Timer/Counter 1
                                 .equ	CS12	= 2	; Prescaler source of Timer/Counter 1
                                 .equ	WGM12	= 3	; Waveform Generation Mode
                                 .equ	WGM13	= 4	; Waveform Generation Mode
                                 .equ	ICES1	= 6	; Input Capture 1 Edge Select
                                 .equ	ICNC1	= 7	; Input Capture 1 Noise Canceler
                                 
                                 ; TCCR1C - Timer/Counter1 Control Register C
                                 .equ	FOC1B	= 6	; 
                                 .equ	FOC1A	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 .equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** TIMER_COUNTER_2 **************
                                 ; TIMSK2 - Timer/Counter Interrupt Mask register
                                 .equ	TOIE2	= 0	; Timer/Counter2 Overflow Interrupt Enable
                                 .equ	TOIE2A	= TOIE2	; For compatibility
                                 .equ	OCIE2A	= 1	; Timer/Counter2 Output Compare Match A Interrupt Enable
                                 .equ	OCIE2B	= 2	; Timer/Counter2 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR2 - Timer/Counter Interrupt Flag Register
                                 .equ	TOV2	= 0	; Timer/Counter2 Overflow Flag
                                 .equ	OCF2A	= 1	; Output Compare Flag 2A
                                 .equ	OCF2B	= 2	; Output Compare Flag 2B
                                 
                                 ; TCCR2A - Timer/Counter2 Control Register A
                                 .equ	WGM20	= 0	; Waveform Genration Mode
                                 .equ	WGM21	= 1	; Waveform Genration Mode
                                 .equ	COM2B0	= 4	; Compare Output Mode bit 0
                                 .equ	COM2B1	= 5	; Compare Output Mode bit 1
                                 .equ	COM2A0	= 6	; Compare Output Mode bit 1
                                 .equ	COM2A1	= 7	; Compare Output Mode bit 1
                                 
                                 ; TCCR2B - Timer/Counter2 Control Register B
                                 .equ	CS20	= 0	; Clock Select bit 0
                                 .equ	CS21	= 1	; Clock Select bit 1
                                 .equ	CS22	= 2	; Clock Select bit 2
                                 .equ	WGM22	= 3	; Waveform Generation Mode
                                 .equ	FOC2B	= 6	; Force Output Compare B
                                 .equ	FOC2A	= 7	; Force Output Compare A
                                 
                                 ; TCNT2 - Timer/Counter2
                                 .equ	TCNT2_0	= 0	; Timer/Counter 2 bit 0
                                 .equ	TCNT2_1	= 1	; Timer/Counter 2 bit 1
                                 .equ	TCNT2_2	= 2	; Timer/Counter 2 bit 2
                                 .equ	TCNT2_3	= 3	; Timer/Counter 2 bit 3
                                 .equ	TCNT2_4	= 4	; Timer/Counter 2 bit 4
                                 .equ	TCNT2_5	= 5	; Timer/Counter 2 bit 5
                                 .equ	TCNT2_6	= 6	; Timer/Counter 2 bit 6
                                 .equ	TCNT2_7	= 7	; Timer/Counter 2 bit 7
                                 
                                 ; OCR2A - Timer/Counter2 Output Compare Register A
                                 .equ	OCR2A_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2A_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2A_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2A_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2A_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2A_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2A_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2A_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; OCR2B - Timer/Counter2 Output Compare Register B
                                 .equ	OCR2B_0	= 0	; Timer/Counter2 Output Compare Register Bit 0
                                 .equ	OCR2B_1	= 1	; Timer/Counter2 Output Compare Register Bit 1
                                 .equ	OCR2B_2	= 2	; Timer/Counter2 Output Compare Register Bit 2
                                 .equ	OCR2B_3	= 3	; Timer/Counter2 Output Compare Register Bit 3
                                 .equ	OCR2B_4	= 4	; Timer/Counter2 Output Compare Register Bit 4
                                 .equ	OCR2B_5	= 5	; Timer/Counter2 Output Compare Register Bit 5
                                 .equ	OCR2B_6	= 6	; Timer/Counter2 Output Compare Register Bit 6
                                 .equ	OCR2B_7	= 7	; Timer/Counter2 Output Compare Register Bit 7
                                 
                                 ; ASSR - Asynchronous Status Register
                                 .equ	TCR2BUB	= 0	; Timer/Counter Control Register2 Update Busy
                                 .equ	TCR2AUB	= 1	; Timer/Counter Control Register2 Update Busy
                                 .equ	OCR2BUB	= 2	; Output Compare Register 2 Update Busy
                                 .equ	OCR2AUB	= 3	; Output Compare Register2 Update Busy
                                 .equ	TCN2UB	= 4	; Timer/Counter2 Update Busy
                                 .equ	AS2	= 5	; Asynchronous Timer/Counter2
                                 .equ	EXCLK	= 6	; Enable External Clock Input
                                 
                                 ; GTCCR - General Timer Counter Control register
                                 .equ	PSRASY	= 1	; Prescaler Reset Timer/Counter2
                                 .equ	PSR2	= PSRASY	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** AD_CONVERTER *****************
                                 ; ADMUX - The ADC multiplexer Selection Register
                                 .equ	MUX0	= 0	; Analog Channel and Gain Selection Bits
                                 .equ	MUX1	= 1	; Analog Channel and Gain Selection Bits
                                 .equ	MUX2	= 2	; Analog Channel and Gain Selection Bits
                                 .equ	MUX3	= 3	; Analog Channel and Gain Selection Bits
                                 .equ	ADLAR	= 5	; Left Adjust Result
                                 .equ	REFS0	= 6	; Reference Selection Bit 0
                                 .equ	REFS1	= 7	; Reference Selection Bit 1
                                 
                                 ; ADCSRA - The ADC Control and Status register A
                                 .equ	ADPS0	= 0	; ADC  Prescaler Select Bits
                                 .equ	ADPS1	= 1	; ADC  Prescaler Select Bits
                                 .equ	ADPS2	= 2	; ADC  Prescaler Select Bits
                                 .equ	ADIE	= 3	; ADC Interrupt Enable
                                 .equ	ADIF	= 4	; ADC Interrupt Flag
                                 .equ	ADATE	= 5	; ADC  Auto Trigger Enable
                                 .equ	ADSC	= 6	; ADC Start Conversion
                                 .equ	ADEN	= 7	; ADC Enable
                                 
                                 ; ADCSRB - The ADC Control and Status register B
                                 .equ	ADTS0	= 0	; ADC Auto Trigger Source bit 0
                                 .equ	ADTS1	= 1	; ADC Auto Trigger Source bit 1
                                 .equ	ADTS2	= 2	; ADC Auto Trigger Source bit 2
                                 .equ	ACME	= 6	; 
                                 
                                 ; ADCH - ADC Data Register High Byte
                                 .equ	ADCH0	= 0	; ADC Data Register High Byte Bit 0
                                 .equ	ADCH1	= 1	; ADC Data Register High Byte Bit 1
                                 .equ	ADCH2	= 2	; ADC Data Register High Byte Bit 2
                                 .equ	ADCH3	= 3	; ADC Data Register High Byte Bit 3
                                 .equ	ADCH4	= 4	; ADC Data Register High Byte Bit 4
                                 .equ	ADCH5	= 5	; ADC Data Register High Byte Bit 5
                                 .equ	ADCH6	= 6	; ADC Data Register High Byte Bit 6
                                 .equ	ADCH7	= 7	; ADC Data Register High Byte Bit 7
                                 
                                 ; ADCL - ADC Data Register Low Byte
                                 .equ	ADCL0	= 0	; ADC Data Register Low Byte Bit 0
                                 .equ	ADCL1	= 1	; ADC Data Register Low Byte Bit 1
                                 .equ	ADCL2	= 2	; ADC Data Register Low Byte Bit 2
                                 .equ	ADCL3	= 3	; ADC Data Register Low Byte Bit 3
                                 .equ	ADCL4	= 4	; ADC Data Register Low Byte Bit 4
                                 .equ	ADCL5	= 5	; ADC Data Register Low Byte Bit 5
                                 .equ	ADCL6	= 6	; ADC Data Register Low Byte Bit 6
                                 .equ	ADCL7	= 7	; ADC Data Register Low Byte Bit 7
                                 
                                 ; DIDR0 - Digital Input Disable Register
                                 .equ	ADC0D	= 0	; 
                                 .equ	ADC1D	= 1	; 
                                 .equ	ADC2D	= 2	; 
                                 .equ	ADC3D	= 3	; 
                                 .equ	ADC4D	= 4	; 
                                 .equ	ADC5D	= 5	; 
                                 
                                 
                                 ; ***** ANALOG_COMPARATOR ************
                                 ; ACSR - Analog Comparator Control And Status Register
                                 .equ	ACIS0	= 0	; Analog Comparator Interrupt Mode Select bit 0
                                 .equ	ACIS1	= 1	; Analog Comparator Interrupt Mode Select bit 1
                                 .equ	ACIC	= 2	; Analog Comparator Input Capture Enable
                                 .equ	ACIE	= 3	; Analog Comparator Interrupt Enable
                                 .equ	ACI	= 4	; Analog Comparator Interrupt Flag
                                 .equ	ACO	= 5	; Analog Compare Output
                                 .equ	ACBG	= 6	; Analog Comparator Bandgap Select
                                 .equ	ACD	= 7	; Analog Comparator Disable
                                 
                                 ; DIDR1 - Digital Input Disable Register 1
                                 .equ	AIN0D	= 0	; AIN0 Digital Input Disable
                                 .equ	AIN1D	= 1	; AIN1 Digital Input Disable
                                 
                                 
                                 ; ***** PORTB ************************
                                 ; PORTB - Port B Data Register
                                 .equ	PORTB0	= 0	; Port B Data Register bit 0
                                 .equ	PB0	= 0	; For compatibility
                                 .equ	PORTB1	= 1	; Port B Data Register bit 1
                                 .equ	PB1	= 1	; For compatibility
                                 .equ	PORTB2	= 2	; Port B Data Register bit 2
                                 .equ	PB2	= 2	; For compatibility
                                 .equ	PORTB3	= 3	; Port B Data Register bit 3
                                 .equ	PB3	= 3	; For compatibility
                                 .equ	PORTB4	= 4	; Port B Data Register bit 4
                                 .equ	PB4	= 4	; For compatibility
                                 .equ	PORTB5	= 5	; Port B Data Register bit 5
                                 .equ	PB5	= 5	; For compatibility
                                 .equ	PORTB6	= 6	; Port B Data Register bit 6
                                 .equ	PB6	= 6	; For compatibility
                                 .equ	PORTB7	= 7	; Port B Data Register bit 7
                                 .equ	PB7	= 7	; For compatibility
                                 
                                 ; DDRB - Port B Data Direction Register
                                 .equ	DDB0	= 0	; Port B Data Direction Register bit 0
                                 .equ	DDB1	= 1	; Port B Data Direction Register bit 1
                                 .equ	DDB2	= 2	; Port B Data Direction Register bit 2
                                 .equ	DDB3	= 3	; Port B Data Direction Register bit 3
                                 .equ	DDB4	= 4	; Port B Data Direction Register bit 4
                                 .equ	DDB5	= 5	; Port B Data Direction Register bit 5
                                 .equ	DDB6	= 6	; Port B Data Direction Register bit 6
                                 .equ	DDB7	= 7	; Port B Data Direction Register bit 7
                                 
                                 ; PINB - Port B Input Pins
                                 .equ	PINB0	= 0	; Port B Input Pins bit 0
                                 .equ	PINB1	= 1	; Port B Input Pins bit 1
                                 .equ	PINB2	= 2	; Port B Input Pins bit 2
                                 .equ	PINB3	= 3	; Port B Input Pins bit 3
                                 .equ	PINB4	= 4	; Port B Input Pins bit 4
                                 .equ	PINB5	= 5	; Port B Input Pins bit 5
                                 .equ	PINB6	= 6	; Port B Input Pins bit 6
                                 .equ	PINB7	= 7	; Port B Input Pins bit 7
                                 
                                 
                                 ; ***** PORTC ************************
                                 ; PORTC - Port C Data Register
                                 .equ	PORTC0	= 0	; Port C Data Register bit 0
                                 .equ	PC0	= 0	; For compatibility
                                 .equ	PORTC1	= 1	; Port C Data Register bit 1
                                 .equ	PC1	= 1	; For compatibility
                                 .equ	PORTC2	= 2	; Port C Data Register bit 2
                                 .equ	PC2	= 2	; For compatibility
                                 .equ	PORTC3	= 3	; Port C Data Register bit 3
                                 .equ	PC3	= 3	; For compatibility
                                 .equ	PORTC4	= 4	; Port C Data Register bit 4
                                 .equ	PC4	= 4	; For compatibility
                                 .equ	PORTC5	= 5	; Port C Data Register bit 5
                                 .equ	PC5	= 5	; For compatibility
                                 .equ	PORTC6	= 6	; Port C Data Register bit 6
                                 .equ	PC6	= 6	; For compatibility
                                 
                                 ; DDRC - Port C Data Direction Register
                                 .equ	DDC0	= 0	; Port C Data Direction Register bit 0
                                 .equ	DDC1	= 1	; Port C Data Direction Register bit 1
                                 .equ	DDC2	= 2	; Port C Data Direction Register bit 2
                                 .equ	DDC3	= 3	; Port C Data Direction Register bit 3
                                 .equ	DDC4	= 4	; Port C Data Direction Register bit 4
                                 .equ	DDC5	= 5	; Port C Data Direction Register bit 5
                                 .equ	DDC6	= 6	; Port C Data Direction Register bit 6
                                 
                                 ; PINC - Port C Input Pins
                                 .equ	PINC0	= 0	; Port C Input Pins bit 0
                                 .equ	PINC1	= 1	; Port C Input Pins bit 1
                                 .equ	PINC2	= 2	; Port C Input Pins bit 2
                                 .equ	PINC3	= 3	; Port C Input Pins bit 3
                                 .equ	PINC4	= 4	; Port C Input Pins bit 4
                                 .equ	PINC5	= 5	; Port C Input Pins bit 5
                                 .equ	PINC6	= 6	; Port C Input Pins bit 6
                                 
                                 
                                 ; ***** PORTD ************************
                                 ; PORTD - Port D Data Register
                                 .equ	PORTD0	= 0	; Port D Data Register bit 0
                                 .equ	PD0	= 0	; For compatibility
                                 .equ	PORTD1	= 1	; Port D Data Register bit 1
                                 .equ	PD1	= 1	; For compatibility
                                 .equ	PORTD2	= 2	; Port D Data Register bit 2
                                 .equ	PD2	= 2	; For compatibility
                                 .equ	PORTD3	= 3	; Port D Data Register bit 3
                                 .equ	PD3	= 3	; For compatibility
                                 .equ	PORTD4	= 4	; Port D Data Register bit 4
                                 .equ	PD4	= 4	; For compatibility
                                 .equ	PORTD5	= 5	; Port D Data Register bit 5
                                 .equ	PD5	= 5	; For compatibility
                                 .equ	PORTD6	= 6	; Port D Data Register bit 6
                                 .equ	PD6	= 6	; For compatibility
                                 .equ	PORTD7	= 7	; Port D Data Register bit 7
                                 .equ	PD7	= 7	; For compatibility
                                 
                                 ; DDRD - Port D Data Direction Register
                                 .equ	DDD0	= 0	; Port D Data Direction Register bit 0
                                 .equ	DDD1	= 1	; Port D Data Direction Register bit 1
                                 .equ	DDD2	= 2	; Port D Data Direction Register bit 2
                                 .equ	DDD3	= 3	; Port D Data Direction Register bit 3
                                 .equ	DDD4	= 4	; Port D Data Direction Register bit 4
                                 .equ	DDD5	= 5	; Port D Data Direction Register bit 5
                                 .equ	DDD6	= 6	; Port D Data Direction Register bit 6
                                 .equ	DDD7	= 7	; Port D Data Direction Register bit 7
                                 
                                 ; PIND - Port D Input Pins
                                 .equ	PIND0	= 0	; Port D Input Pins bit 0
                                 .equ	PIND1	= 1	; Port D Input Pins bit 1
                                 .equ	PIND2	= 2	; Port D Input Pins bit 2
                                 .equ	PIND3	= 3	; Port D Input Pins bit 3
                                 .equ	PIND4	= 4	; Port D Input Pins bit 4
                                 .equ	PIND5	= 5	; Port D Input Pins bit 5
                                 .equ	PIND6	= 6	; Port D Input Pins bit 6
                                 .equ	PIND7	= 7	; Port D Input Pins bit 7
                                 
                                 
                                 ; ***** TIMER_COUNTER_0 **************
                                 ; TIMSK0 - Timer/Counter0 Interrupt Mask Register
                                 .equ	TOIE0	= 0	; Timer/Counter0 Overflow Interrupt Enable
                                 .equ	OCIE0A	= 1	; Timer/Counter0 Output Compare Match A Interrupt Enable
                                 .equ	OCIE0B	= 2	; Timer/Counter0 Output Compare Match B Interrupt Enable
                                 
                                 ; TIFR0 - Timer/Counter0 Interrupt Flag register
                                 .equ	TOV0	= 0	; Timer/Counter0 Overflow Flag
                                 .equ	OCF0A	= 1	; Timer/Counter0 Output Compare Flag 0A
                                 .equ	OCF0B	= 2	; Timer/Counter0 Output Compare Flag 0B
                                 
                                 ; TCCR0A - Timer/Counter  Control Register A
                                 .equ	WGM00	= 0	; Waveform Generation Mode
                                 .equ	WGM01	= 1	; Waveform Generation Mode
                                 .equ	COM0B0	= 4	; Compare Output Mode, Fast PWm
                                 .equ	COM0B1	= 5	; Compare Output Mode, Fast PWm
                                 .equ	COM0A0	= 6	; Compare Output Mode, Phase Correct PWM Mode
                                 .equ	COM0A1	= 7	; Compare Output Mode, Phase Correct PWM Mode
                                 
                                 ; TCCR0B - Timer/Counter Control Register B
                                 .equ	CS00	= 0	; Clock Select
                                 .equ	CS01	= 1	; Clock Select
                                 .equ	CS02	= 2	; Clock Select
                                 .equ	WGM02	= 3	; 
                                 .equ	FOC0B	= 6	; Force Output Compare B
                                 .equ	FOC0A	= 7	; Force Output Compare A
                                 
                                 ; TCNT0 - Timer/Counter0
                                 .equ	TCNT0_0	= 0	; 
                                 .equ	TCNT0_1	= 1	; 
                                 .equ	TCNT0_2	= 2	; 
                                 .equ	TCNT0_3	= 3	; 
                                 .equ	TCNT0_4	= 4	; 
                                 .equ	TCNT0_5	= 5	; 
                                 .equ	TCNT0_6	= 6	; 
                                 .equ	TCNT0_7	= 7	; 
                                 
                                 ; OCR0A - Timer/Counter0 Output Compare Register
                                 .equ	OCR0A_0	= 0	; 
                                 .equ	OCR0A_1	= 1	; 
                                 .equ	OCR0A_2	= 2	; 
                                 .equ	OCR0A_3	= 3	; 
                                 .equ	OCR0A_4	= 4	; 
                                 .equ	OCR0A_5	= 5	; 
                                 .equ	OCR0A_6	= 6	; 
                                 .equ	OCR0A_7	= 7	; 
                                 
                                 ; OCR0B - Timer/Counter0 Output Compare Register
                                 .equ	OCR0B_0	= 0	; 
                                 .equ	OCR0B_1	= 1	; 
                                 .equ	OCR0B_2	= 2	; 
                                 .equ	OCR0B_3	= 3	; 
                                 .equ	OCR0B_4	= 4	; 
                                 .equ	OCR0B_5	= 5	; 
                                 .equ	OCR0B_6	= 6	; 
                                 .equ	OCR0B_7	= 7	; 
                                 
                                 ; GTCCR - General Timer/Counter Control Register
                                 ;.equ	PSRSYNC	= 0	; Prescaler Reset Timer/Counter1 and Timer/Counter0
                                 .equ	PSR10	= PSRSYNC	; For compatibility
                                 ;.equ	TSM	= 7	; Timer/Counter Synchronization Mode
                                 
                                 
                                 ; ***** EXTERNAL_INTERRUPT ***********
                                 ; EICRA - External Interrupt Control Register
                                 .equ	ISC00	= 0	; External Interrupt Sense Control 0 Bit 0
                                 .equ	ISC01	= 1	; External Interrupt Sense Control 0 Bit 1
                                 .equ	ISC10	= 2	; External Interrupt Sense Control 1 Bit 0
                                 .equ	ISC11	= 3	; External Interrupt Sense Control 1 Bit 1
                                 
                                 ; EIMSK - External Interrupt Mask Register
                                 .equ	INT0	= 0	; External Interrupt Request 0 Enable
                                 .equ	INT1	= 1	; External Interrupt Request 1 Enable
                                 
                                 ; EIFR - External Interrupt Flag Register
                                 .equ	INTF0	= 0	; External Interrupt Flag 0
                                 .equ	INTF1	= 1	; External Interrupt Flag 1
                                 
                                 ; PCICR - Pin Change Interrupt Control Register
                                 .equ	PCIE0	= 0	; Pin Change Interrupt Enable 0
                                 .equ	PCIE1	= 1	; Pin Change Interrupt Enable 1
                                 .equ	PCIE2	= 2	; Pin Change Interrupt Enable 2
                                 
                                 ; PCMSK2 - Pin Change Mask Register 2
                                 .equ	PCINT16	= 0	; Pin Change Enable Mask 16
                                 .equ	PCINT17	= 1	; Pin Change Enable Mask 17
                                 .equ	PCINT18	= 2	; Pin Change Enable Mask 18
                                 .equ	PCINT19	= 3	; Pin Change Enable Mask 19
                                 .equ	PCINT20	= 4	; Pin Change Enable Mask 20
                                 .equ	PCINT21	= 5	; Pin Change Enable Mask 21
                                 .equ	PCINT22	= 6	; Pin Change Enable Mask 22
                                 .equ	PCINT23	= 7	; Pin Change Enable Mask 23
                                 
                                 ; PCMSK1 - Pin Change Mask Register 1
                                 .equ	PCINT8	= 0	; Pin Change Enable Mask 8
                                 .equ	PCINT9	= 1	; Pin Change Enable Mask 9
                                 .equ	PCINT10	= 2	; Pin Change Enable Mask 10
                                 .equ	PCINT11	= 3	; Pin Change Enable Mask 11
                                 .equ	PCINT12	= 4	; Pin Change Enable Mask 12
                                 .equ	PCINT13	= 5	; Pin Change Enable Mask 13
                                 .equ	PCINT14	= 6	; Pin Change Enable Mask 14
                                 
                                 ; PCMSK0 - Pin Change Mask Register 0
                                 .equ	PCINT0	= 0	; Pin Change Enable Mask 0
                                 .equ	PCINT1	= 1	; Pin Change Enable Mask 1
                                 .equ	PCINT2	= 2	; Pin Change Enable Mask 2
                                 .equ	PCINT3	= 3	; Pin Change Enable Mask 3
                                 .equ	PCINT4	= 4	; Pin Change Enable Mask 4
                                 .equ	PCINT5	= 5	; Pin Change Enable Mask 5
                                 .equ	PCINT6	= 6	; Pin Change Enable Mask 6
                                 .equ	PCINT7	= 7	; Pin Change Enable Mask 7
                                 
                                 ; PCIFR - Pin Change Interrupt Flag Register
                                 .equ	PCIF0	= 0	; Pin Change Interrupt Flag 0
                                 .equ	PCIF1	= 1	; Pin Change Interrupt Flag 1
                                 .equ	PCIF2	= 2	; Pin Change Interrupt Flag 2
                                 
                                 
                                 ; ***** SPI **************************
                                 ; SPDR - SPI Data Register
                                 .equ	SPDR0	= 0	; SPI Data Register bit 0
                                 .equ	SPDR1	= 1	; SPI Data Register bit 1
                                 .equ	SPDR2	= 2	; SPI Data Register bit 2
                                 .equ	SPDR3	= 3	; SPI Data Register bit 3
                                 .equ	SPDR4	= 4	; SPI Data Register bit 4
                                 .equ	SPDR5	= 5	; SPI Data Register bit 5
                                 .equ	SPDR6	= 6	; SPI Data Register bit 6
                                 .equ	SPDR7	= 7	; SPI Data Register bit 7
                                 
                                 ; SPSR - SPI Status Register
                                 .equ	SPI2X	= 0	; Double SPI Speed Bit
                                 .equ	WCOL	= 6	; Write Collision Flag
                                 .equ	SPIF	= 7	; SPI Interrupt Flag
                                 
                                 ; SPCR - SPI Control Register
                                 .equ	SPR0	= 0	; SPI Clock Rate Select 0
                                 .equ	SPR1	= 1	; SPI Clock Rate Select 1
                                 .equ	CPHA	= 2	; Clock Phase
                                 .equ	CPOL	= 3	; Clock polarity
                                 .equ	MSTR	= 4	; Master/Slave Select
                                 .equ	DORD	= 5	; Data Order
                                 .equ	SPE	= 6	; SPI Enable
                                 .equ	SPIE	= 7	; SPI Interrupt Enable
                                 
                                 
                                 ; ***** WATCHDOG *********************
                                 ; WDTCSR - Watchdog Timer Control Register
                                 .equ	WDP0	= 0	; Watch Dog Timer Prescaler bit 0
                                 .equ	WDP1	= 1	; Watch Dog Timer Prescaler bit 1
                                 .equ	WDP2	= 2	; Watch Dog Timer Prescaler bit 2
                                 .equ	WDE	= 3	; Watch Dog Enable
                                 .equ	WDCE	= 4	; Watchdog Change Enable
                                 .equ	WDP3	= 5	; Watchdog Timer Prescaler Bit 3
                                 .equ	WDIE	= 6	; Watchdog Timeout Interrupt Enable
                                 .equ	WDIF	= 7	; Watchdog Timeout Interrupt Flag
                                 
                                 
                                 ; ***** CPU **************************
                                 ; SREG - Status Register
                                 .equ	SREG_C	= 0	; Carry Flag
                                 .equ	SREG_Z	= 1	; Zero Flag
                                 .equ	SREG_N	= 2	; Negative Flag
                                 .equ	SREG_V	= 3	; Two's Complement Overflow Flag
                                 .equ	SREG_S	= 4	; Sign Bit
                                 .equ	SREG_H	= 5	; Half Carry Flag
                                 .equ	SREG_T	= 6	; Bit Copy Storage
                                 .equ	SREG_I	= 7	; Global Interrupt Enable
                                 
                                 ; OSCCAL - Oscillator Calibration Value
                                 .equ	CAL0	= 0	; Oscillator Calibration Value Bit0
                                 .equ	CAL1	= 1	; Oscillator Calibration Value Bit1
                                 .equ	CAL2	= 2	; Oscillator Calibration Value Bit2
                                 .equ	CAL3	= 3	; Oscillator Calibration Value Bit3
                                 .equ	CAL4	= 4	; Oscillator Calibration Value Bit4
                                 .equ	CAL5	= 5	; Oscillator Calibration Value Bit5
                                 .equ	CAL6	= 6	; Oscillator Calibration Value Bit6
                                 .equ	CAL7	= 7	; Oscillator Calibration Value Bit7
                                 
                                 ; CLKPR - Clock Prescale Register
                                 .equ	CLKPS0	= 0	; Clock Prescaler Select Bit 0
                                 .equ	CLKPS1	= 1	; Clock Prescaler Select Bit 1
                                 .equ	CLKPS2	= 2	; Clock Prescaler Select Bit 2
                                 .equ	CLKPS3	= 3	; Clock Prescaler Select Bit 3
                                 .equ	CLKPCE	= 7	; Clock Prescaler Change Enable
                                 
                                 ; SPMCSR - Store Program Memory Control and Status Register
                                 .equ    SELFPRGEN = 0; Added for backwards compatibility
                                 .equ	SPMEN	= 0	; Store Program Memory
                                 .equ	PGERS	= 1	; Page Erase
                                 .equ	PGWRT	= 2	; Page Write
                                 .equ	BLBSET	= 3	; Boot Lock Bit Set
                                 .equ	RWWSRE	= 4	; Read-While-Write section read enable
                                 .equ    SIGRD   = 5 ; Signature Row Read
                                 .equ	RWWSB	= 6	; Read-While-Write Section Busy
                                 .equ	SPMIE	= 7	; SPM Interrupt Enable
                                 
                                 ; MCUCR - MCU Control Register
                                 .equ	IVCE	= 0	; 
                                 .equ	IVSEL	= 1	; 
                                 .equ	PUD	= 4	; 
                                 .equ	BODSE	= 5	; BOD Sleep Enable
                                 .equ	BODS	= 6	; BOD Sleep
                                 
                                 ; MCUSR - MCU Status Register
                                 .equ	PORF	= 0	; Power-on reset flag
                                 .equ	EXTRF	= 1	; External Reset Flag
                                 .equ	EXTREF	= EXTRF	; For compatibility
                                 .equ	BORF	= 2	; Brown-out Reset Flag
                                 .equ	WDRF	= 3	; Watchdog Reset Flag
                                 
                                 ; SMCR - Sleep Mode Control Register
                                 .equ	SE	= 0	; Sleep Enable
                                 .equ	SM0	= 1	; Sleep Mode Select Bit 0
                                 .equ	SM1	= 2	; Sleep Mode Select Bit 1
                                 .equ	SM2	= 3	; Sleep Mode Select Bit 2
                                 
                                 ; GPIOR2 - General Purpose I/O Register 2
                                 .equ	GPIOR20	= 0	; 
                                 .equ	GPIOR21	= 1	; 
                                 .equ	GPIOR22	= 2	; 
                                 .equ	GPIOR23	= 3	; 
                                 .equ	GPIOR24	= 4	; 
                                 .equ	GPIOR25	= 5	; 
                                 .equ	GPIOR26	= 6	; 
                                 .equ	GPIOR27	= 7	; 
                                 
                                 ; GPIOR1 - General Purpose I/O Register 1
                                 .equ	GPIOR10	= 0	; 
                                 .equ	GPIOR11	= 1	; 
                                 .equ	GPIOR12	= 2	; 
                                 .equ	GPIOR13	= 3	; 
                                 .equ	GPIOR14	= 4	; 
                                 .equ	GPIOR15	= 5	; 
                                 .equ	GPIOR16	= 6	; 
                                 .equ	GPIOR17	= 7	; 
                                 
                                 ; GPIOR0 - General Purpose I/O Register 0
                                 .equ	GPIOR00	= 0	; 
                                 .equ	GPIOR01	= 1	; 
                                 .equ	GPIOR02	= 2	; 
                                 .equ	GPIOR03	= 3	; 
                                 .equ	GPIOR04	= 4	; 
                                 .equ	GPIOR05	= 5	; 
                                 .equ	GPIOR06	= 6	; 
                                 .equ	GPIOR07	= 7	; 
                                 
                                 ; PRR - Power Reduction Register
                                 .equ	PRADC	= 0	; Power Reduction ADC
                                 .equ	PRUSART0	= 1	; Power Reduction USART
                                 .equ	PRSPI	= 2	; Power Reduction Serial Peripheral Interface
                                 .equ	PRTIM1	= 3	; Power Reduction Timer/Counter1
                                 .equ	PRTIM0	= 5	; Power Reduction Timer/Counter0
                                 .equ	PRTIM2	= 6	; Power Reduction Timer/Counter2
                                 .equ	PRTWI	= 7	; Power Reduction TWI
                                 
                                 
                                 ; ***** EEPROM ***********************
                                 ; EEARL - EEPROM Address Register Low Byte
                                 .equ	EEAR0	= 0	; EEPROM Read/Write Access Bit 0
                                 .equ	EEAR1	= 1	; EEPROM Read/Write Access Bit 1
                                 .equ	EEAR2	= 2	; EEPROM Read/Write Access Bit 2
                                 .equ	EEAR3	= 3	; EEPROM Read/Write Access Bit 3
                                 .equ	EEAR4	= 4	; EEPROM Read/Write Access Bit 4
                                 .equ	EEAR5	= 5	; EEPROM Read/Write Access Bit 5
                                 .equ	EEAR6	= 6	; EEPROM Read/Write Access Bit 6
                                 .equ	EEAR7	= 7	; EEPROM Read/Write Access Bit 7
                                 
                                 ; EEARH - EEPROM Address Register High Byte
                                 .equ	EEAR8	= 0	; EEPROM Read/Write Access Bit 8
                                 .equ	EEAR9	= 1	; EEPROM Read/Write Access Bit 9
                                 
                                 ; EEDR - EEPROM Data Register
                                 .equ	EEDR0	= 0	; EEPROM Data Register bit 0
                                 .equ	EEDR1	= 1	; EEPROM Data Register bit 1
                                 .equ	EEDR2	= 2	; EEPROM Data Register bit 2
                                 .equ	EEDR3	= 3	; EEPROM Data Register bit 3
                                 .equ	EEDR4	= 4	; EEPROM Data Register bit 4
                                 .equ	EEDR5	= 5	; EEPROM Data Register bit 5
                                 .equ	EEDR6	= 6	; EEPROM Data Register bit 6
                                 .equ	EEDR7	= 7	; EEPROM Data Register bit 7
                                 
                                 ; EECR - EEPROM Control Register
                                 .equ	EERE	= 0	; EEPROM Read Enable
                                 .equ	EEPE	= 1	; EEPROM Write Enable
                                 .equ	EEMPE	= 2	; EEPROM Master Write Enable
                                 .equ	EERIE	= 3	; EEPROM Ready Interrupt Enable
                                 .equ	EEPM0	= 4	; EEPROM Programming Mode Bit 0
                                 .equ	EEPM1	= 5	; EEPROM Programming Mode Bit 1
                                 
                                 
                                 
                                 ; ***** LOCKSBITS ********************************************************
                                 .equ	LB1	= 0	; Lock bit
                                 .equ	LB2	= 1	; Lock bit
                                 .equ	BLB01	= 2	; Boot Lock bit
                                 .equ	BLB02	= 3	; Boot Lock bit
                                 .equ	BLB11	= 4	; Boot lock bit
                                 .equ	BLB12	= 5	; Boot lock bit
                                 
                                 
                                 ; ***** FUSES ************************************************************
                                 ; LOW fuse bits
                                 .equ	CKSEL0	= 0	; Select Clock Source
                                 .equ	CKSEL1	= 1	; Select Clock Source
                                 .equ	CKSEL2	= 2	; Select Clock Source
                                 .equ	CKSEL3	= 3	; Select Clock Source
                                 .equ	SUT0	= 4	; Select start-up time
                                 .equ	SUT1	= 5	; Select start-up time
                                 .equ	CKOUT	= 6	; Clock output
                                 .equ	CKDIV8	= 7	; Divide clock by 8
                                 
                                 ; HIGH fuse bits
                                 .equ	BOOTRST	= 0	; Select reset vector
                                 .equ	BOOTSZ0	= 1	; Select boot size
                                 .equ	BOOTSZ1	= 2	; Select boot size
                                 .equ	EESAVE	= 3	; EEPROM memory is preserved through chip erase
                                 .equ	WDTON	= 4	; Watchdog Timer Always On
                                 .equ	SPIEN	= 5	; Enable Serial programming and Data Downloading
                                 .equ	DWEN	= 6	; debugWIRE Enable
                                 .equ	RSTDISBL	= 7	; External reset disable
                                 
                                 ; EXTENDED fuse bits
                                 .equ	BODLEVEL0	= 0	; Brown-out Detector trigger level
                                 .equ	BODLEVEL1	= 1	; Brown-out Detector trigger level
                                 .equ	BODLEVEL2	= 2	; Brown-out Detector trigger level
                                 
                                 
                                 
                                 ; ***** CPU REGISTER DEFINITIONS *****************************************
                                 .def	XH	= r27
                                 .def	XL	= r26
                                 .def	YH	= r29
                                 .def	YL	= r28
                                 .def	ZH	= r31
                                 .def	ZL	= r30
                                 
                                 
                                 
                                 ; ***** DATA MEMORY DECLARATIONS *****************************************
                                 .equ	FLASHEND	= 0x3fff	; Note: Word address
                                 .equ	IOEND	= 0x00ff
                                 .equ	SRAM_START	= 0x0100
                                 .equ	SRAM_SIZE	= 2048
                                 .equ	RAMEND	= 0x08ff
                                 .equ	XRAMEND	= 0x0000
                                 .equ	E2END	= 0x03ff
                                 .equ	EEPROMEND	= 0x03ff
                                 .equ	EEADRBITS	= 10
                                 #pragma AVRPART MEMORY PROG_FLASH 32768
                                 #pragma AVRPART MEMORY EEPROM 1024
                                 #pragma AVRPART MEMORY INT_SRAM SIZE 2048
                                 #pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                                 
                                 
                                 
                                 ; ***** BOOTLOADER DECLARATIONS ******************************************
                                 .equ	NRWW_START_ADDR	= 0x3800
                                 .equ	NRWW_STOP_ADDR	= 0x3fff
                                 .equ	RWW_START_ADDR	= 0x0
                                 .equ	RWW_STOP_ADDR	= 0x37ff
                                 .equ	PAGESIZE	= 64
                                 .equ	FIRSTBOOTSTART	= 0x3f00
                                 .equ	SECONDBOOTSTART	= 0x3e00
                                 .equ	THIRDBOOTSTART	= 0x3c00
                                 .equ	FOURTHBOOTSTART	= 0x3800
                                 .equ	SMALLBOOTSTART	= FIRSTBOOTSTART
                                 .equ	LARGEBOOTSTART	= FOURTHBOOTSTART
                                 
                                 
                                 
                                 ; ***** INTERRUPT VECTORS ************************************************
                                 .equ	INT0addr	= 0x0002	; External Interrupt Request 0
                                 .equ	INT1addr	= 0x0004	; External Interrupt Request 1
                                 .equ	PCI0addr	= 0x0006	; Pin Change Interrupt Request 0
                                 .equ	PCI1addr	= 0x0008	; Pin Change Interrupt Request 0
                                 .equ	PCI2addr	= 0x000a	; Pin Change Interrupt Request 1
                                 .equ	WDTaddr	= 0x000c	; Watchdog Time-out Interrupt
                                 .equ	OC2Aaddr	= 0x000e	; Timer/Counter2 Compare Match A
                                 .equ	OC2Baddr	= 0x0010	; Timer/Counter2 Compare Match A
                                 .equ	OVF2addr	= 0x0012	; Timer/Counter2 Overflow
                                 .equ	ICP1addr	= 0x0014	; Timer/Counter1 Capture Event
                                 .equ	OC1Aaddr	= 0x0016	; Timer/Counter1 Compare Match A
                                 .equ	OC1Baddr	= 0x0018	; Timer/Counter1 Compare Match B
                                 .equ	OVF1addr	= 0x001a	; Timer/Counter1 Overflow
                                 .equ	OC0Aaddr	= 0x001c	; TimerCounter0 Compare Match A
                                 .equ	OC0Baddr	= 0x001e	; TimerCounter0 Compare Match B
                                 .equ	OVF0addr	= 0x0020	; Timer/Couner0 Overflow
                                 .equ	SPIaddr	= 0x0022	; SPI Serial Transfer Complete
                                 .equ	URXCaddr	= 0x0024	; USART Rx Complete
                                 .equ	UDREaddr	= 0x0026	; USART, Data Register Empty
                                 .equ	UTXCaddr	= 0x0028	; USART Tx Complete
                                 .equ	ADCCaddr	= 0x002a	; ADC Conversion Complete
                                 .equ	ERDYaddr	= 0x002c	; EEPROM Ready
                                 .equ	ACIaddr	= 0x002e	; Analog Comparator
                                 .equ	TWIaddr	= 0x0030	; Two-wire Serial Interface
                                 .equ	SPMRaddr	= 0x0032	; Store Program Memory Read
                                 
                                 .equ	INT_VECTORS_SIZE	= 52	; size in words
                                 
                                 #endif  /* _M328PDEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 
                                 ; Universidad Del Valle De Guatemala
                                 ; IE2023: Programación de Microcontroladores
                                 ; main.asm
                                 ; Autor: Samuel Tortola - 22094
                                 ; Proyecto: Laboratorio 1: Sumador de 4 bits
                                 ; Hardware: Atmega238p
                                 ; Creado: 25/01/2024
                                 ; Última modificación: 31/01/2024 
                                 ;******************************************************************************
                                 
                                 
                                 
                                 ;******************************************************************************
                                 ;ENCABEZADO
                                 ;******************************************************************************
                                 .include "M328PDEF.inc"
                                 
                                 ;***** Created: 2011-02-09 12:03 ******* Source: ATmega328P.xml **********
                                 ;*************************************************************************
                                 ;* A P P L I C A T I O N   N O T E   F O R   T H E   A V R   F A M I L Y
                                 ;* 
                                 ;* Number            : AVR000
                                 ;* File Name         : "m328Pdef.inc"
                                 ;* Title             : Register/Bit Definitions for the ATmega328P
                                 ;* Date              : 2011-02-09
                                 ;* Version           : 2.35
                                 ;* Support E-mail    : avr@atmel.com
                                 ;* Target MCU        : ATmega328P
                                 ;* 
                                 ;* DESCRIPTION
                                 ;* When including this file in the assembly program file, all I/O register 
                                 ;* names and I/O register bit names appearing in the data book can be used.
                                 ;* In addition, the six registers forming the three data pointers X, Y and 
                                 ;* Z have been assigned names XL - ZH. Highest RAM address for Internal 
                                 ;* SRAM is also defined 
                                 ;* 
                                 ;* The Register names are represented by their hexadecimal address.
                                 ;* 
                                 ;* The Register Bit names are represented by their bit number (0-7).
                                 ;* 
                                 ;* Please observe the difference in using the bit names with instructions
                                 ;* such as "sbr"/"cbr" (set/clear bit in register) and "sbrs"/"sbrc"
                                 ;* (skip if bit in register set/cleared). The following example illustrates
                                 ;* this:
                                 ;* 
                                 ;* in    r16,PORTB             ;read PORTB latch
                                 ;* sbr   r16,(1<<PB6)+(1<<PB5) ;set PB6 and PB5 (use masks, not bit#)
                                 ;* out   PORTB,r16             ;output to PORTB
                                 ;* 
                                 ;* in    r16,TIFR              ;read the Timer Interrupt Flag Register
                                 ;* sbrc  r16,TOV0              ;test the overflow flag (use bit#)
                                 ;* rjmp  TOV0_is_set           ;jump if set
                                 ;* ...                         ;otherwise do something else
                                 ;*************************************************************************
                                 
                                 #ifndef _M328PDEF_INC_
                                 #endif  /* _M328PDEF_INC_ */
                                 
                                 ; ***** END OF FILE ******************************************************
                                 .CSEG
                                 .ORG 0x0000 //Iniciar en la posición 0
                                 
                                 
                                 ;******************************************************************************
                                 ;STACK POINTER
                                 ;******************************************************************************
000000 ef0f                      LDI R16, LOW(RAMEND)  
000001 bf0d                      OUT SPL, R16
000002 e018                       LDI R17, HIGH(RAMEND)
000003 bf1e                      OUT SPH, R17
                                 
                                 
                                 ;******************************************************************************
                                 ;CONFIGURACIÓN
                                 ;******************************************************************************
                                 
                                 SETUP:
000004 e800                      	LDI R16, 0b1000_0000
000005 e800                      	LDI R16, (1 << CLKPCE) //Corrimiento a CLKPCE
000006 9300 0061                 	STS CLKPR, R16        // Habilitando el prescaler 
                                 
000008 e004                      	LDI R16, 0b0000_0100
000009 9300 0061                 	STS CLKPR, R16   //Frecuencia del sistema de 1MHz
                                 
                                 
                                 
                                 ;******************************************************************************
00000b e70c                          LDI R16, 0b01111100  //Configurar el pin PD2, PD3, PD4, PD5, PD6 como entrada con pullup
00000c b90b                      	OUT PORTD, R16     //Habilitando el PULLUP en los pines
00000d e800                      	LDI R16, 0b10000000
00000e b90a                      	OUT DDRD, R16  //Configurar PD2 a PD6 como entrada y PD7 como salida
                                 
                                 
                                 
00000f e30f                          LDI R16, 0b00111111
000010 b904                      	OUT DDRB, R16  //Colocar los pines PB0 - PB5 como salidas
                                 
000011 e30f                      	LDI R16, 0b0111111
000012 b907                      	OUT DDRC, R16 //Colocar los pines PC0 - PC5 como salidas
                                 
                                 
000013 e021                      	LDI R18, 1  //Suma o resta para el contador
000014 e030                      	LDI R19, 0
000015 e040                      	LDI R20, 0
000016 e060                      	LDI R22, 0
                                 
                                 
                                 LOOP:
000017 b109                      	IN R16, PIND   //Obtener el estado del puerto D
000018 ff02                      	SBRS R16, PD2  //La instrucción salta si el bit PD2 está en 1
000019 c009                      	RJMP DelayBounce1   //Antirrebote
                                 
00001a ff03                      	SBRS R16, PD3  //La instrucción salta si el bit PD3 está en 1
00001b c0ab                      	RJMP DelayBounce12  //Antirrebote
                                 
00001c ff04                      	SBRS R16, PD4  //La instrucción salta si el bit PD4 está en 1
00001d c14c                      	RJMP DelayBounce121  //Antirrebote
                                 
00001e ff05                      	SBRS R16, PD5  //La instrucción salta si el bit PD5 está en 1
00001f c1cb                      	RJMP DelayBounce122  //Antirrebote
                                 
000020 ff06                      	SBRS R16, PD6  //La instrucción salta si el bit PD6 está en 1
000021 c24d                      	RJMP DelayBounce7  //Antirrebote
                                 
000022 cff4                      	RJMP LOOP //salta de regreso al loop
                                 
                                 
                                 ;******************* CONTADOR 1**************************************
                                 DelayBounce1:
000023 ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay:
000024 950a                      		DEC R16 //Decrementa R16
000025 f7f1                      		BRNE delay   //Si R16 no es igual a 0, tira al delay
000026 ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay1:
000027 950a                      		DEC R16 //Decrementa R16
000028 f7f1                      		BRNE delay1   //Si R16 no es igual a 0, tira al delay
                                 
                                 		//Se vuelve a leer
000029 9b4a                      	SBIS PIND, PD2    //La instrucción salta si el bit PD2 está en 1
00002a cff8                      	RJMP DelayBounce1  //Repetir verificación, hasta que sea estable el pulsador
                                 
                                 	
                                 
00002b 0f32                      	ADD R19, R18 //Incrementa el valor del registro 19
                                 
                                 
                                   
00002c 3130                      	CPI R19, 16   //Compara el registro 19 con un inmediato
00002d f119                      	BREQ  tramp5  //Salta si el resgitro y la bandera Z es igual.
00002e 3031                      	CPI R19, 1   // Se hace esto para los 15 Números del contador
00002f f141                      	BREQ CASE1
000030 3032                      	CPI R19, 2
000031 f169                      	BREQ CASE2
000032 3033                      	CPI R19, 3
000033 f191                      	BREQ CASE3
000034 3034                      	CPI R19, 4
000035 f1b9                      	BREQ CASE4
000036 3035                      	CPI R19, 5
000037 f1e1                      	BREQ CASE5
000038 3036                      	CPI R19, 6
000039 f0e9                      	BREQ tramp1177
00003a 3037                      	CPI R19, 7
00003b f0d1                      	BREQ tramp10
00003c 3038                      	CPI R19, 8
00003d f0b9                      	BREQ tramp9
00003e 3039                      	CPI R19, 9
00003f f0a1                      	BREQ tramp8
000040 303a                      	CPI R19, 10
000041 f089                      	BREQ tramp7
000042 303b                      	CPI R19, 11
000043 f071                      	BREQ tramp6
000044 303c                      	CPI R19, 12
000045 f051                      	BREQ tramp4
000046 303d                      	CPI R19, 13
000047 f031                      	BREQ tramp2
000048 303e                      	CPI R19, 14
000049 f019                      	BREQ tramp1
00004a 303f                      	CPI R19, 15
00004b f019                      	BREQ tramp3
                                 	
                                 	
                                 	
                                 	DEFAULT:       //Condicional switch-case
00004c c076                      		RJMP DONE
                                 	tramp1:
00004d c065                      		RJMP CASE14
                                 	tramp2:
00004e c05d                      		RJMP CASE13
                                 	tramp3:
00004f c06a                      		RJMP CASE15
                                 	tramp4:
000050 c054                      		RJMP CASE12
                                 	tramp5:
000051 c06f                      		RJMP conteo
                                 	tramp6:
000052 c04b                      		RJMP CASE11
                                 	tramp7:
000053 c043                      		RJMP CASE10
                                 	tramp8:
000054 c03b                      		RJMP CASE9
                                 	tramp9:
000055 c033                      		RJMP CASE8
                                 	tramp10:
000056 c02b                      		RJMP CASE7
                                 	tramp1177:
000057 c023                      		RJMP CASE6
                                 	CASE1:
000058 b103                      	    IN R16, PINB
000059 b903                      		OUT PINB, R16
00005a e004                      		LDI R16, 0b00000100  //Muestra el numero 1
00005b b903                      	    OUT PINB, R16
00005c e000                      		LDI R16, 0b00000000
00005d b909                      		OUT PIND, R16
00005e c064                      		RJMP DONE
                                 
                                 	CASE2:
00005f b103                      		IN R16, PINB
000060 b903                      		OUT PINB, R16
000061 e002                      		LDI R16, 0b00000010  //Muestra el numero 2
000062 b903                      		OUT PINB, R16
000063 e000                      		LDI R16, 0b00000000
000064 b909                      		OUT PIND, R16
000065 c05d                      		RJMP DONE
                                 
                                 	CASE3:
000066 b103                      	    IN R16, PINB
000067 b903                      		OUT PINB, R16
000068 e006                      	    LDI R16, 0b00000110  //Muestra el numero 3
000069 b903                      	    OUT PINB, R16
00006a e000                      		LDI R16, 0b00000000
00006b b909                      		OUT PIND, R16
00006c c056                      		RJMP DONE
                                 
                                 	CASE4:
00006d b103                      	    IN R16, PINB
00006e b903                      		OUT PINB, R16
00006f e001                      		LDI R16, 0b00000001  //Muestra el numero 4
000070 b903                      		OUT PINB, R16
000071 e000                      		LDI R16, 0b00000000
000072 b909                      		OUT PIND, R16
000073 c04f                      		RJMP DONE
                                 
                                 	CASE5:
000074 b103                      	    IN R16, PINB
000075 b903                      		OUT PINB, R16
000076 e005                      		LDI R16, 0b00000101  //Muestra el numero 5
000077 b903                      		OUT PINB, R16
000078 e000                      		LDI R16, 0b00000000
000079 b909                      		OUT PIND, R16
00007a c048                      		RJMP DONE
                                 
                                 	CASE6:
00007b b103                      	    IN R16, PINB
00007c b903                      		OUT PINB, R16
00007d e003                      		LDI R16, 0b00000011  //Muestra el numero 6
00007e b903                      		OUT PINB, R16
00007f e000                      		LDI R16, 0b00000000
000080 b909                      		OUT PIND, R16
000081 c041                      		RJMP DONE
                                 
                                 	
                                 	CASE7:
000082 b103                      	    IN R16, PINB
000083 b903                      		OUT PINB, R16
000084 e007                      		LDI R16, 0b00000111  //Muestra el numero 7
000085 b903                      		OUT PINB, R16
                                 		
000086 e000                      		LDI R16, 0b00000000
000087 b909                      		OUT PIND, R16
000088 c03a                      		RJMP DONE
                                 
                                 	CASE8:
000089 b103                      	    IN R16, PINB
00008a b903                      		OUT PINB, R16
00008b e000                      		LDI R16, 0b00000000  //Muestra el numero 8
00008c b903                      		OUT PINB, R16
                                 		
00008d e800                      		LDI R16, 0b10000000
00008e b909                      		OUT PIND, R16
00008f c033                      		RJMP DONE
                                 
                                     CASE9:
000090 b103                      	    IN R16, PINB
000091 b903                      		OUT PINB, R16
000092 e004                      		LDI R16, 0b00000100  //Muestra el numero 9
000093 b903                      		OUT PINB, R16
                                 		
000094 e000                      		LDI R16, 0b00000000
000095 b909                      		OUT PIND, R16
000096 c02c                      		RJMP DONE
                                 
                                      CASE10:
000097 b103                      	    IN R16, PINB
000098 b903                      		OUT PINB, R16
000099 e002                      		LDI R16, 0b00000010  //Muestra el numero 10
00009a b903                      		OUT PINB, R16
                                 		
00009b e000                      		LDI R16, 0b00000000
00009c b909                      		OUT PIND, R16
00009d c025                      		RJMP DONE
                                 
                                 	
                                      CASE11:
00009e b103                      	    IN R16, PINB
00009f b903                      		OUT PINB, R16
0000a0 e006                      		LDI R16, 0b00000110  //Muestra el numero 11
0000a1 b903                      		OUT PINB, R16
                                 		
0000a2 e000                      		LDI R16, 0b00000000
0000a3 b909                      		OUT PIND, R16
0000a4 c01e                      		RJMP DONE
                                 
                                 	 CASE12:
0000a5 b103                      	    IN R16, PINB
0000a6 b903                      		OUT PINB, R16
0000a7 e001                      	    LDI R16, 0b00000001  //Muestra el numero 12
0000a8 b903                      	    OUT PINB, R16
                                 		
0000a9 e000                      	    LDI R16, 0b00000000
0000aa b909                      		OUT PIND, R16
0000ab c017                      		RJMP DONE
                                 
                                     CASE13:
0000ac b103                      	    IN R16, PINB
0000ad b903                      		OUT PINB, R16
0000ae e005                      	    LDI R16, 0b00000101  //Muestra el numero 13
0000af b903                      	    OUT PINB, R16
                                 		
0000b0 e000                      	    LDI R16, 0b00000000
0000b1 b909                      		OUT PIND, R16
0000b2 c010                      		RJMP DONE
                                 
                                     CASE14:
0000b3 b103                      	    IN R16, PINB
0000b4 b903                      		OUT PINB, R16
0000b5 e003                      	    LDI R16, 0b00000011  //Muestra el numero 14
0000b6 b903                      	    OUT PINB, R16
                                 		
0000b7 e000                      	    LDI R16, 0b00000000
0000b8 b909                      		OUT PIND, R16
0000b9 c009                      		RJMP DONE
                                 
                                     CASE15:
0000ba b103                      	    IN R16, PINB
0000bb b903                      		OUT PINB, R16
0000bc e007                      	    LDI R16, 0b00000111  //Muestra el numero 15
0000bd b903                      	    OUT PINB, R16
                                 		
0000be e000                      	    LDI R16, 0b00000000
0000bf b909                      		OUT PIND, R16
0000c0 c002                      		RJMP DONE
                                 	conteo:
0000c1 e00f                      		LDI R16, 15
0000c2 2f30                      		MOV R19, R16
                                 
                                 
                                 	DONE:
0000c3 e080                      		LDI R24, 0b0000000 //Borrar el puertoC
0000c4 b988                      	    OUT PORTC,R24
0000c5 c0ad                              RJMP switch1 //saltar para colocar el valor del contador 2 otra vez
                                 		
                                 
                                 
0000c6 cf50                      	RJMP LOOP  //Regresar a LOOP
                                 
                                 
                                 
                                 
                                 DelayBounce12:
0000c7 ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay12:
0000c8 950a                      		DEC R16 //Decrementa R16
0000c9 f7f1                      		BRNE delay12   //Si R16 no es igual a 0, tira al delay
0000ca ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay111:
0000cb 950a                      		DEC R16 //Decrementa R16
0000cc f7f1                      		BRNE delay111   //Si R16 no es igual a 0, tira al delay
                                 
                                 		//Se vuelve a leer
0000cd 9b4b                      	SBIS PIND, PD3    //La instrucción salta si el bit PD2 está en 1
0000ce cff8                      	RJMP DelayBounce12  //Repetir verificación, hasta que sea estable el pulsador
                                 
                                 
0000cf 1b32                      	SUB R19, R18
                                 
                                 
                                 
0000d0 3f3f                      	CPI R19, -1
0000d1 f119                      	BREQ  tramp51
0000d2 3031                      	CPI R19, 1
0000d3 f141                      	BREQ CASE111
0000d4 3032                      	CPI R19, 2
0000d5 f169                      	BREQ CASE21
0000d6 3033                      	CPI R19, 3
0000d7 f191                      	BREQ CASE31
0000d8 3034                      	CPI R19, 4
0000d9 f1b9                      	BREQ CASE41
0000da 3035                      	CPI R19, 5
0000db f1e1                      	BREQ CASE51
0000dc 3036                      	CPI R19, 6
0000dd f0e9                      	BREQ tramp111
0000de 3037                      	CPI R19, 7
0000df f0d1                      	BREQ tramp101
0000e0 3038                      	CPI R19, 8
0000e1 f0b9                      	BREQ tramp91
0000e2 3039                      	CPI R19, 9
0000e3 f0a1                      	BREQ tramp81
0000e4 303a                      	CPI R19, 10
0000e5 f089                      	BREQ tramp71
0000e6 303b                      	CPI R19, 11
0000e7 f071                      	BREQ tramp61
0000e8 303c                      	CPI R19, 12
0000e9 f051                      	BREQ tramp41
0000ea 303d                      	CPI R19, 13
0000eb f031                      	BREQ tramp21
0000ec 303e                      	CPI R19, 14
0000ed f019                      	BREQ tramp11
0000ee 3030                      	CPI R19, 0
0000ef f019                      	BREQ tramp31
                                 	
                                 	
                                 	
                                 	DEFAULT1: 
0000f0 c076                      		RJMP DONE1
                                 	tramp11:
0000f1 c065                      		RJMP CASE141
                                 	tramp21:
0000f2 c05d                      		RJMP CASE131
                                 	tramp31:
0000f3 c06a                      		RJMP CASE151
                                 	tramp41:
0000f4 c054                      		RJMP CASE121
                                 	tramp51:
0000f5 c06f                      		RJMP conteo1
                                 	tramp61:
0000f6 c04b                      		RJMP CASE1112
                                 	tramp71:
0000f7 c043                      		RJMP CASE101
                                 	tramp81:
0000f8 c03b                      		RJMP CASE91
                                 	tramp91:
0000f9 c033                      		RJMP CASE81
                                 	tramp101:
0000fa c02b                      		RJMP CASE71
                                 	tramp111:
0000fb c023                      		RJMP CASE61
                                 	CASE111:
0000fc b103                      	    IN R16, PINB
0000fd b903                      		OUT PINB, R16
0000fe e004                      		LDI R16, 0b00000100  //Muestra el numero 1
0000ff b903                      	    OUT PINB, R16
000100 e000                      		LDI R16, 0b00000000
000101 b909                      		OUT PIND, R16
000102 c064                      		RJMP DONE1
                                 
                                 	CASE21:
000103 b103                      		IN R16, PINB
000104 b903                      		OUT PINB, R16
000105 e002                      		LDI R16, 0b00000010  //Muestra el numero 2
000106 b903                      		OUT PINB, R16
000107 e000                      		LDI R16, 0b00000000
000108 b909                      		OUT PIND, R16
000109 c05d                      		RJMP DONE1
                                 
                                 	CASE31:
00010a b103                      	    IN R16, PINB
00010b b903                      		OUT PINB, R16
00010c e006                      	    LDI R16, 0b00000110  //Muestra el numero 3
00010d b903                      	    OUT PINB, R16
00010e e000                      		LDI R16, 0b00000000
00010f b909                      		OUT PIND, R16
000110 c056                      		RJMP DONE1
                                 
                                 	CASE41:
000111 b103                      	    IN R16, PINB
000112 b903                      		OUT PINB, R16
000113 e001                      		LDI R16, 0b00000001  //Muestra el numero 4
000114 b903                      		OUT PINB, R16
000115 e000                      		LDI R16, 0b00000000
000116 b909                      		OUT PIND, R16
000117 c04f                      		RJMP DONE1
                                 
                                 	CASE51:
000118 b103                      	    IN R16, PINB
000119 b903                      		OUT PINB, R16
00011a e005                      		LDI R16, 0b00000101  //Muestra el numero 5
00011b b903                      		OUT PINB, R16
00011c e000                      		LDI R16, 0b00000000
00011d b909                      		OUT PIND, R16
00011e c048                      		RJMP DONE1
                                 
                                 	CASE61:
00011f b103                      	    IN R16, PINB
000120 b903                      		OUT PINB, R16
000121 e003                      		LDI R16, 0b00000011  //Muestra el numero 6
000122 b903                      		OUT PINB, R16
000123 e000                      		LDI R16, 0b00000000
000124 b909                      		OUT PIND, R16
000125 c041                      		RJMP DONE1
                                 
                                 	
                                 	CASE71:
000126 b103                      	    IN R16, PINB
000127 b903                      		OUT PINB, R16
000128 e007                      		LDI R16, 0b00000111  //Muestra el numero 7
000129 b903                      		OUT PINB, R16
                                 		
00012a e800                      		LDI R16, 0b10000000
00012b b909                      		OUT PIND, R16
00012c c03a                      		RJMP DONE1
                                 
                                 	CASE81:
00012d b103                      	    IN R16, PINB
00012e b903                      		OUT PINB, R16
00012f e000                      		LDI R16, 0b00000000  //Muestra el numero 8
000130 b903                      		OUT PINB, R16
                                 		
000131 e000                      		LDI R16, 0b00000000
000132 b909                      		OUT PIND, R16
000133 c033                      		RJMP DONE1
                                 
                                     CASE91:
000134 b103                      	    IN R16, PINB
000135 b903                      		OUT PINB, R16
000136 e004                      		LDI R16, 0b00000100  //Muestra el numero 9
000137 b903                      		OUT PINB, R16
                                 		
000138 e000                      		LDI R16, 0b00000000
000139 b909                      		OUT PIND, R16
00013a c02c                      		RJMP DONE1
                                 
                                      CASE101:
00013b b103                      	    IN R16, PINB
00013c b903                      		OUT PINB, R16
00013d e002                      		LDI R16, 0b00000010  //Muestra el numero 10
00013e b903                      		OUT PINB, R16
                                 		
00013f e000                      		LDI R16, 0b00000000
000140 b909                      		OUT PIND, R16
000141 c025                      		RJMP DONE1
                                 
                                 	
                                      CASE1112:
000142 b103                      	    IN R16, PINB
000143 b903                      		OUT PINB, R16
000144 e006                      		LDI R16, 0b00000110  //Muestra el numero 11
000145 b903                      		OUT PINB, R16
                                 		
000146 e000                      		LDI R16, 0b00000000
000147 b909                      		OUT PIND, R16
000148 c01e                      		RJMP DONE1
                                 
                                 	 CASE121:
000149 b103                      	    IN R16, PINB
00014a b903                      		OUT PINB, R16
00014b e001                      	    LDI R16, 0b00000001  //Muestra el numero 12
00014c b903                      	    OUT PINB, R16
                                 		
00014d e000                      	    LDI R16, 0b00000000
00014e b909                      		OUT PIND, R16
00014f c017                      		RJMP DONE1
                                 
                                     CASE131:
000150 b103                      	    IN R16, PINB
000151 b903                      		OUT PINB, R16
000152 e005                      	    LDI R16, 0b00000101  //Muestra el numero 13
000153 b903                      	    OUT PINB, R16
                                 		
000154 e000                      	    LDI R16, 0b00000000
000155 b909                      		OUT PIND, R16
000156 c010                      		RJMP DONE1
                                 
                                     CASE141:
000157 b103                      	    IN R16, PINB
000158 b903                      		OUT PINB, R16
000159 e003                      	    LDI R16, 0b00000011  //Muestra el numero 14
00015a b903                      	    OUT PINB, R16
                                 		
00015b e000                      	    LDI R16, 0b00000000
00015c b909                      		OUT PIND, R16
00015d c009                      		RJMP DONE1
                                 
                                     CASE151:
00015e b103                      	    IN R16, PINB
00015f b903                      		OUT PINB, R16
000160 e000                      	    LDI R16, 0b00000000  //Muestra el numero 0
000161 b903                      	    OUT PINB, R16
                                 		
000162 e000                      	    LDI R16, 0b00000000
000163 b909                      		OUT PIND, R16
000164 c002                      		RJMP DONE1
                                 	conteo1:
000165 e000                      		LDI R16, 0
000166 2f30                      		MOV R19, R16
                                 
                                 
                                 	DONE1:
000167 e080                      		LDI R24, 0b0000000 //Borrar el puertoC
000168 b988                      	    OUT PORTC,R24
000169 c009                      	    RJMP switch1//saltar para colocar el valor del contador 2 otra vez
                                 		
                                 
                                 
                                 ;******************* CONTADOR 2**************************************
                                 DelayBounce121:
00016a ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay3:
00016b 950a                      		DEC R16 //Decrementa R16
00016c f7f1                      		BRNE delay3   //Si R16 no es igual a 0, tira al delay
00016d ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay13:
00016e 950a                      		DEC R16 //Decrementa R16
00016f f7f1                      		BRNE delay13   //Si R16 no es igual a 0, tira al delay
                                 			
                                 
                                 		//Se vuelve a leer
000170 9b4c                      	SBIS PIND, PD4    //La instrucción salta si el bit PD4 está en 1
000171 cff8                      	RJMP DelayBounce121  //Repetir verificación, hasta que sea estable el pulsador
                                 
                                 
000172 0f42                      	ADD R20, R18 //Sumar al contador
                                 
                                 
                                   switch1:
000173 3140                      	CPI R20, 16
000174 f119                      	BREQ  tramp556
000175 3041                      	CPI R20, 1
000176 f129                      	BREQ CASE156
000177 3042                      	CPI R20, 2
000178 f141                      	BREQ CASE256
000179 3043                      	CPI R20, 3
00017a f159                      	BREQ CASE356
00017b 3044                      	CPI R20, 4
00017c f171                      	BREQ CASE456
00017d 3045                      	CPI R20, 5
00017e f189                      	BREQ CASE556
00017f 3046                      	CPI R20, 6
000180 f1a1                      	BREQ CASE656
000181 3047                      	CPI R20, 7
000182 f1b9                      	BREQ CASE756
000183 3048                      	CPI R20, 8
000184 f1d1                      	BREQ CASE856
000185 3049                      	CPI R20, 9
000186 f0a1                      	BREQ ta2
000187 304a                      	CPI R20, 10
000188 f089                      	BREQ ta1
000189 304b                      	CPI R20, 11
00018a f071                      	BREQ ta
00018b 304c                      	CPI R20, 12
00018c f051                      	BREQ tramp456
00018d 304d                      	CPI R20, 13
00018e f031                      	BREQ tramp256
00018f 304e                      	CPI R20, 14
000190 f019                      	BREQ tramp156
000191 304f                      	CPI R20, 15
000192 f019                      	BREQ tramp356
                                 	
                                 	
                                 	
                                 	
                                 	DEFAULT56: 
000193 c055                      		RJMP DONE56
                                 	tramp156:
000194 c048                      		RJMP CASE1456
                                 	tramp256:
000195 c042                      		RJMP CASE1356
                                 	tramp356:
000196 c04b                      		RJMP CASE1556
                                 	tramp456:
000197 c03b                      		RJMP CASE1256
                                 	tramp556:
000198 c04e                      		RJMP conteo56
                                 	ta:
000199 c034                      		RJMP CASE1156
                                 	ta1:
00019a c02e                      		RJMP CASE1056
                                 	ta2:
00019b c028                      		RJMP CASE956
                                 	
                                 
                                 	CASE156:
00019c b106                      		IN R16, PINC
00019d b906                      		OUT PINC, R16
00019e e002                      		LDI R16, 0b00000010  //Muestra el numero 1
00019f b906                      	    OUT PINC, R16
0001a0 c048                      		RJMP DONE56
                                 
                                 	CASE256:
0001a1 b106                      		IN R16, PINC
0001a2 b906                      		OUT PINC, R16
0001a3 e004                      		LDI R16, 0b00000100  //Muestra el numero 2
0001a4 b906                      		OUT PINC, R16
0001a5 c043                      		RJMP DONE56
                                 
                                 	CASE356:
0001a6 b106                      	    IN R16, PINC
0001a7 b906                      		OUT PINC, R16
0001a8 e006                      	    LDI R16, 0b00000110  //Muestra el numero 3
0001a9 b906                      	    OUT PINC, R16
0001aa c03e                      		RJMP DONE56
                                 
                                 	CASE456:
0001ab b106                      	    IN R16, PINC
0001ac b906                      		OUT PINC, R16
0001ad e008                      		LDI R16, 0b00001000  //Muestra el numero 4
0001ae b906                      		OUT PINC, R16
0001af c039                      		RJMP DONE56
                                 
                                 	CASE556:
0001b0 b106                      	    IN R16, PINC
0001b1 b906                      		OUT PINC, R16
0001b2 e00a                      		LDI R16, 0b00001010  //Muestra el numero 5
0001b3 b906                      		OUT PINC, R16
0001b4 c034                      		RJMP DONE56
                                 
                                 	CASE656:
0001b5 b106                      	    IN R16, PINC
0001b6 b906                      		OUT PINC, R16
0001b7 e00c                      		LDI R16, 0b00001100  //Muestra el numero 6
0001b8 b906                      		OUT PINC, R16
0001b9 c02f                      		RJMP DONE56
                                 
                                 	
                                 	CASE756:
0001ba b106                      	    IN R16, PINC
0001bb b906                      		OUT PINC, R16
0001bc e00e                      		LDI R16, 0b00001110  //Muestra el numero 7
0001bd b906                      		OUT PINC, R16
0001be c02a                      		RJMP DONE56
                                 
                                 	CASE856:
0001bf b106                      	    IN R16, PINC
0001c0 b906                      		OUT PINC, R16
0001c1 e100                      		LDI R16, 0b00010000  //Muestra el numero 8
0001c2 b906                      		OUT PINC, R16
0001c3 c025                      		RJMP DONE56
                                 
                                     CASE956:
0001c4 b106                      	    IN R16, PINC
0001c5 b906                      		OUT PINC, R16
0001c6 e102                      		LDI R16, 0b00010010  //Muestra el numero 9
0001c7 b906                      		OUT PINC, R16
0001c8 c020                      		RJMP DONE56
                                 
                                      CASE1056:
0001c9 b106                      	    IN R16, PINC
0001ca b906                      		OUT PINC, R16
0001cb e104                      		LDI R16, 0b00010100  //Muestra el numero 10
0001cc b906                      		OUT PINC, R16
0001cd c01b                      		RJMP DONE56
                                 
                                 	
                                      CASE1156:
0001ce b106                      	    IN R16, PINC
0001cf b906                      		OUT PINC, R16
0001d0 e106                      		LDI R16, 0b00010110  //Muestra el numero 11
0001d1 b906                      		OUT PINC, R16
0001d2 c016                      		RJMP DONE56
                                 
                                 	 CASE1256:
0001d3 b106                      	    IN R16, PINC
0001d4 b906                      		OUT PINC, R16
0001d5 e108                      	    LDI R16, 0b00011000 //Muestra el numero 12
0001d6 b906                      	    OUT PINC, R16
0001d7 c011                      		RJMP DONE56
                                 
                                     CASE1356:
0001d8 b106                      	    IN R16, PINC
0001d9 b906                      		OUT PINC, R16
0001da e10a                      	    LDI R16, 0b00011010  //Muestra el numero 13
0001db b906                      	    OUT PINC, R16
0001dc c00c                      		RJMP DONE56
                                 
                                     CASE1456:
0001dd b106                      	    IN R16, PINC
0001de b906                      		OUT PINC, R16
0001df e10c                      	    LDI R16, 0b00011100  //Muestra el numero 14
0001e0 b906                      	    OUT PINC, R16
0001e1 c007                      		RJMP DONE56
                                 
                                     CASE1556:
0001e2 b106                      	    IN R16, PINC
0001e3 b906                      		OUT PINC, R16
0001e4 e10e                      	    LDI R16, 0b00011110  //Muestra el numero 15
0001e5 b906                      	    OUT PINC, R16
0001e6 c002                      		RJMP DONE56
                                 
                                 	conteo56:
0001e7 e00f                      		LDI R16, 15
0001e8 2f40                      		MOV R20, R16
                                 
                                 
                                 	DONE56:
                                 		
0001e9 ce2d                      		RJMP LOOP
                                 
                                 
0001ea ce2c                      	RJMP LOOP  //Regresar a LOOP
                                 
                                 
                                 
                                 DelayBounce122:
0001eb ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay124:
0001ec 950a                      		DEC R16 //Decrementa R16
0001ed f7f1                      		BRNE delay124   //Si R16 no es igual a 0, tira al delay
0001ee ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay1114:
0001ef 950a                      		DEC R16 //Decrementa R16
0001f0 f7f1                      		BRNE delay1114   //Si R16 no es igual a 0, tira al delay
                                 
                                 		//Se vuelve a leer
0001f1 9b4d                      	SBIS PIND, PD5    //La instrucción salta si el bit PD5 está en 1
0001f2 cff8                      	RJMP DelayBounce122  //Repetir verificación, hasta que sea estable el pulsador
                                 
0001f3 1b42                      	SUB R20, R18 //Resta el contador
                                 
                                 
                                 
0001f4 3f4f                      	CPI R20, -1  //Comparaciones 
0001f5 f119                      	BREQ  tramp5178  //salta a cada caso según el conteo
0001f6 3041                      	CPI R20, 1
0001f7 f141                      	BREQ CASE11178
0001f8 3042                      	CPI R20, 2
0001f9 f159                      	BREQ CASE2178
0001fa 3043                      	CPI R20, 3
0001fb f171                      	BREQ CASE3178
0001fc 3044                      	CPI R20, 4
0001fd f189                      	BREQ CASE4178
0001fe 3045                      	CPI R20, 5
0001ff f1a1                      	BREQ CASE5178
000200 3046                      	CPI R20, 6
000201 f0e9                      	BREQ tramp11178
000202 3047                      	CPI R20, 7
000203 f0d1                      	BREQ tramp10178
000204 3048                      	CPI R20, 8
000205 f0b9                      	BREQ tramp9178
000206 3049                      	CPI R20, 9
000207 f0a1                      	BREQ tramp8178
000208 304a                      	CPI R20, 10
000209 f089                      	BREQ tramp7178
00020a 304b                      	CPI R20, 11
00020b f071                      	BREQ tramp6178
00020c 304c                      	CPI R20, 12
00020d f051                      	BREQ tramp4178
00020e 304d                      	CPI R20, 13
00020f f031                      	BREQ tramp2178
000210 304e                      	CPI R20, 14
000211 f019                      	BREQ tramp1178
000212 3040                      	CPI R20, 0
000213 f019                      	BREQ tramp3178
                                 	
                                 	
                                 	
                                 	DEFAULT178: 
000214 c058                      		RJMP DONE178
                                 	tramp1178:
000215 c04b                      		RJMP CASE14178
                                 	tramp2178:
000216 c045                      		RJMP CASE13178
                                 	tramp3178:
000217 c04e                      		RJMP CASE15178
                                 	tramp4178:
000218 c03e                      		RJMP CASE12178
                                 	tramp5178:
000219 c051                      		RJMP conteo178
                                 	tramp6178:
00021a c037                      		RJMP CASE111278
                                 	tramp7178:
00021b c031                      		RJMP CASE10178
                                 	tramp8178:
00021c c02b                      		RJMP CASE9178
                                 	tramp9178:
00021d c025                      		RJMP CASE8178
                                 	tramp10178:
00021e c01f                      		RJMP CASE7178
                                 	tramp11178:
00021f c019                      		RJMP CASE6178
                                 	CASE11178:
000220 b106                      	    IN R16, PINC
000221 b906                      		OUT PINC, R16
000222 e002                      		LDI R16, 0b00000010  //Muestra el numero 1
000223 b906                      	    OUT PINC, R16
000224 c048                      		RJMP DONE178
                                 
                                 	CASE2178:
000225 b106                      		IN R16, PINC
000226 b906                      		OUT PINC, R16
000227 e004                      		LDI R16, 0b00000100  //Muestra el numero 2
000228 b906                      		OUT PINC, R16
000229 c043                      		RJMP DONE178
                                 
                                 	CASE3178:
00022a b106                      	    IN R16, PINC
00022b b906                      		OUT PINC, R16
00022c e006                      	    LDI R16, 0b00000110  //Muestra el numero 3
00022d b906                      	    OUT PINC, R16
00022e c03e                      		RJMP DONE178
                                 
                                 	CASE4178:
00022f b106                      	    IN R16, PINC
000230 b906                      		OUT PINC, R16
000231 e008                      		LDI R16, 0b00001000  //Muestra el numero 4
000232 b906                      		OUT PINC, R16
000233 c039                      		RJMP DONE178
                                 
                                 	CASE5178:
000234 b106                      	    IN R16, PINC
000235 b906                      		OUT PINC, R16
000236 e00a                      		LDI R16, 0b00001010  //Muestra el numero 5
000237 b906                      		OUT PINC, R16
000238 c034                      		RJMP DONE178
                                 
                                 	CASE6178:
000239 b106                      	    IN R16, PINC
00023a b906                      		OUT PINC, R16
00023b e00c                      		LDI R16, 0b00001100  //Muestra el numero 6
00023c b906                      		OUT PINC, R16
00023d c02f                      		RJMP DONE178
                                 
                                 	
                                 	CASE7178:
00023e b106                      	    IN R16, PINC
00023f b906                      		OUT PINC, R16
000240 e00e                      		LDI R16, 0b00001110  //Muestra el numero 7
000241 b906                      		OUT PINC, R16
000242 c02a                      		RJMP DONE178
                                 
                                 	CASE8178:
000243 b106                      	    IN R16, PINC
000244 b906                      		OUT PINC, R16
000245 e100                      		LDI R16, 0b00010000   //Muestra el numero 8
000246 b906                      		OUT PINC, R16
000247 c025                      		RJMP DONE178
                                 
                                     CASE9178:
000248 b106                      	    IN R16, PINC
000249 b906                      		OUT PINC, R16
00024a e102                      		LDI R16, 0b00010010  //Muestra el numero 9
00024b b906                      		OUT PINC, R16
00024c c020                      		RJMP DONE178
                                 
                                      CASE10178:
00024d b106                      	    IN R16, PINC
00024e b906                      		OUT PINC, R16
00024f e104                      		LDI R16, 0b00010100   //Muestra el numero 10
000250 b906                      		OUT PINC, R16
000251 c01b                      		RJMP DONE178
                                 
                                 	
                                      CASE111278:
000252 b106                      	    IN R16, PINC
000253 b906                      		OUT PINC, R16
000254 e106                      		LDI R16, 0b00010110 //Muestra el numero 11
000255 b906                      		OUT PINC, R16
000256 c016                      		RJMP DONE178
                                 
                                 	 CASE12178:
000257 b106                      	    IN R16, PINC
000258 b906                      		OUT PINC, R16
000259 e108                      	    LDI R16, 0b00011000 //Muestra el numero 12
00025a b906                      	    OUT PINC, R16
00025b c011                      		RJMP DONE178
                                 
                                     CASE13178:
00025c b106                      	    IN R16, PINC
00025d b906                      		OUT PINC, R16
00025e e10a                      	    LDI R16, 0b00011010  //Muestra el numero 13
00025f b906                      	    OUT PINC, R16
000260 c00c                      		RJMP DONE178
                                 
                                     CASE14178:
000261 b106                      	    IN R16, PINC
000262 b906                      		OUT PINC, R16
000263 e10c                      	    LDI R16, 0b00011100  //Muestra el numero 14
000264 b906                      	    OUT PINC, R16
000265 c007                      		RJMP DONE178
                                 
                                     CASE15178:
000266 b106                      	    IN R16, PINC
000267 b906                      		OUT PINC, R16
000268 e000                      	    LDI R16, 0b00000000  //Muestra el numero 0
000269 b906                      	    OUT PINC, R16
00026a c002                      		RJMP DONE178
                                 
                                 	conteo178:
00026b e000                      		LDI R16, 0
00026c 2f40                      		MOV R20, R16
                                 
                                 
                                 	DONE178:
                                 		
00026d cda9                      		RJMP LOOP
                                 
                                 
00026e cda8                      	RJMP LOOP  //Regresar a LOOP
                                 
                                 
                                 
                                 //********************************************SUMA CON ACARREO DE LOS DOS CONTADORES**********************************************************
                                 
                                 DelayBounce7: //Función que suma con acarreo
00026f ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay222:
000270 950a                      		DEC R16 //Decrementa R16
000271 f7f1                      		BRNE delay222   //Si R16 no es igual a 0, tira al delay
000272 ef0f                      	LDI R16, 255   //Cargar con un valor a R16
                                 	delay333:
000273 950a                      		DEC R16 //Decrementa R16
000274 f7f1                      		BRNE delay333   //Si R16 no es igual a 0, tira al delay
                                 
                                 		//Se vuelve a leer
000275 9b4e                      	SBIS PIND, PD6    //La instrucción salta si el bit PD2 está en 1
000276 cff8                      	RJMP DelayBounce7  //Repetir verificación, hasta que sea estable el pulsador
                                 
000277 2f63                      	MOV R22, R19
000278 1f64                      	ADC R22, R20 //Suma con acarreo
                                 
                                 
                                 	
000279 3061                      	CPI R22, 1   //Comparar cada suma para verificar que LED encender
00027a f169                      	BREQ CASE1569
00027b 3062                      	CPI R22, 2
00027c f189                      	BREQ CASE2569
00027d 3063                      	CPI R22, 3
00027e f1a9                      	BREQ CASE3569
00027f 3064                      	CPI R22, 4
000280 f1c9                      	BREQ CASE4569
000281 3065                      	CPI R22, 5
000282 f1e9                      	BREQ CASE5569
000283 3066                      	CPI R22, 6
000284 f109                      	BREQ tamp5
000285 3067                      	CPI R22, 7
000286 f0f1                      	BREQ tamp4
000287 3068                      	CPI R22, 8
000288 f0d9                      	BREQ tamp3
000289 3069                      	CPI R22, 9
00028a f0c1                      	BREQ tamp2
00028b 306a                      	CPI R22, 10
00028c f0a9                      	BREQ tamp1
00028d 306b                      	CPI R22, 11
00028e f091                      	BREQ tamp
00028f 306c                      	CPI R22, 12
000290 f071                      	BREQ tramp4569
000291 306d                      	CPI R22, 13
000292 f051                      	BREQ tramp2569
000293 306e                      	CPI R22, 14
000294 f039                      	BREQ tramp1569
000295 306f                      	CPI R22, 15
000296 f039                      	BREQ tramp3569
000297 3060                      	CPI R22, 0
000298 f039                      	BREQ tramp356910
000299 3160                      	CPI R22, 16
00029a f460                      	BRSH acarreo //Salta si es mayor o igual
                                 
                                 	
                                 	
                                 	
                                 	DEFAULT569:                 //Comienza switch-case
00029b c072                      		RJMP DONE569
                                 	tramp1569:       //Saltos para no sobrepasara los saltos de la instrucción BREQ
00029c c059                      		RJMP CASE14569 
                                 	tramp2569:
00029d c052                      		RJMP CASE13569
                                 	tramp3569:
00029e c05d                      		RJMP CASE15569
                                 	tramp4569:
00029f c04a                      		RJMP CASE12569
                                 	tramp356910:
0002a0 c061                      		RJMP CASEM
                                 	tamp:
0002a1 c042                      		RJMP CASE11569
                                 	tamp1:
0002a2 c03b                      		RJMP CASE10569
                                 	tamp2:
0002a3 c034                      		RJMP CASE9569
                                 	tamp3:
0002a4 c02d                      		RJMP CASE8569
                                 	tamp4:
0002a5 c026                      		RJMP CASE7569
                                 	tamp5:
0002a6 c01f                      		RJMP CASE6569
                                 	acarreo:
0002a7 c060                      		RJMP acarreos
                                 
                                 	CASE1569:    //Muestra numero 1
0002a8 9a1b                      		SBI PINB, PB3 // SBI pone a 1 el bit de un registro
0002a9 981c                      		CBI PINB, PB4 //CBI pone a 0 el bit de un registro
0002aa 981d                      		CBI PINB, PB5
0002ab 9830                      		CBI PINC, PC0
0002ac 9835                      		CBI PINC, PC5
0002ad c060                      		RJMP DONE569
                                 
                                 	CASE2569:   //Muestra numero 2
0002ae 981b                      		CBI PINB, PB3
0002af 9a1c                      		SBI PINB, PB4
0002b0 981d                      		CBI PINB, PB5
0002b1 9830                      		CBI PINC, PC0
0002b2 9835                      		CBI PINC, PC5
0002b3 c05a                      		RJMP DONE569
                                 
                                 	CASE3569://Muestra el numero 3
0002b4 9a1b                      		SBI PINB, PB3
0002b5 9a1c                      		SBI PINB, PB4
0002b6 981d                      		CBI PINB, PB5
0002b7 9830                      		CBI PINC, PC0
0002b8 9835                      		CBI PINC, PC5
0002b9 c054                      		RJMP DONE569
                                 
                                 	CASE4569://Muestra el numero 4
0002ba 981b                      		CBI PINB, PB3
0002bb 981c                      		CBI PINB, PB4
0002bc 9a1d                      		SBI PINB, PB5
0002bd 9830                      		CBI PINC, PC0
0002be 9835                      		CBI PINC, PC5
0002bf c04e                      		RJMP DONE569
                                 
                                 	CASE5569: //Muestra el numero 5
0002c0 9a1b                      		SBI PINB, PB3 
0002c1 9a1d                      		SBI PINB, PB5
0002c2 981c                      		CBI PINB, PB4
0002c3 9830                      		CBI PINC, PC0
0002c4 9835                      		CBI PINC, PC5
0002c5 c048                      		RJMP DONE569
                                 
                                 	CASE6569://Muestra el numero 6
0002c6 9a1c                      	    SBI PINB, PB4
0002c7 9a1d                      		SBI PINB, PB5
0002c8 981b                      		CBI PINB, PB3
0002c9 9830                      		CBI PINC, PC0
0002ca 9835                      		CBI PINC, PC5
0002cb c042                      		RJMP DONE569
                                 
                                 	
                                 	CASE7569://Muestra el numero 7
0002cc 9a1b                      	    SBI PINB, PB3
0002cd 9a1c                      		SBI PINB, PB4
0002ce 9a1d                      		SBI PINB, PB5
0002cf 9830                      		CBI PINC, PC0
0002d0 9835                      		CBI PINC, PC5
0002d1 c03c                      		RJMP DONE569
                                 
                                 	CASE8569://Muestra el numero 8
0002d2 9a30                      	   SBI PINC, PC0
0002d3 981b                      	   CBI PINB, PB3
0002d4 981c                      	   CBI PINB, PB4
0002d5 981d                      	   CBI PINB, PB5
0002d6 9835                      	   CBI PINC, PC5
0002d7 c036                      		RJMP DONE569
                                 
                                     CASE9569: //Muestra el numero 9
0002d8 9a30                      	    SBI PINC, PC0
0002d9 9a1b                      		SBI PINB, PB3
0002da 981c                      		CBI PINB, PB4
0002db 981d                      		CBI PINB, PB5
0002dc 9835                      		CBI PINC, PC5
0002dd c030                      		RJMP DONE569
                                 
                                      CASE10569://Muestra el numero 10
0002de 9a30                      		SBI PINC, PC0
0002df 9a1c                      		SBI PINB, PB4
0002e0 981b                      		CBI PINB, PB3
0002e1 981d                      		CBI PINB, PB5
0002e2 9835                      		CBI PINC, PC5
0002e3 c02a                      		RJMP DONE569
                                 
                                 	
                                      CASE11569://Muestra el numero 11
0002e4 9a30                      	    SBI PINC, PC0
0002e5 981d                      		CBI PINB, PB5
0002e6 9a1c                      		SBI PINB, PB4
0002e7 9a1b                      		SBI PINB, PB3
0002e8 9835                      		CBI PINC, PC5
0002e9 c024                      		RJMP DONE569
                                 
                                 	 CASE12569://Muestra el numero 12
0002ea 9a30                      		SBI PINC, PC0
0002eb 9a1d                      		SBI PINB, PB5
0002ec 981c                      		CBI PINB, PB4
0002ed 981b                      		CBI PINB, PB3
0002ee 9835                      		CBI PINC, PC5
0002ef c01e                      		RJMP DONE569
                                 
                                     CASE13569://Muestra el numero 13
0002f0 9a30                      	    SBI PINC, PC0
0002f1 9a1d                      		SBI PINB, PB5
0002f2 9a1b                      		SBI PINB, PB3
0002f3 981c                      		CBI PINB, PB4
0002f4 9835                      		CBI PINC, PC5
0002f5 c018                      		RJMP DONE569
                                 
                                     CASE14569: //Muestra el numero 14
0002f6 981b                      	    CBI PINB, PB3
0002f7 9a1c                      		SBI PINB, PB4
0002f8 9a1d                      		SBI PINB, PB5
0002f9 9a30                      		SBI PINC, PC0
0002fa 9835                      		CBI PINC, PC5
0002fb c012                      		RJMP DONE569
                                 
                                     CASE15569:  //Muestra el numero 15
0002fc 9a1b                      	    SBI PINB, PB3
0002fd 9a1c                      	    SBI PINB, PB4
0002fe 9a1d                      	    SBI PINB, PB5
0002ff 9a30                      	    SBI PINC, PC0
000300 9835                      		CBI PINC, PC5
000301 c00c                      		RJMP DONE569
                                 
                                 	CASEM:   //Muestra el numero 0
000302 981b                      		CBI PINB, PB3
000303 981c                      		CBI PINB, PB4
000304 981d                      		CBI PINB, PB5
000305 9830                      		CBI PINC, PC0
000306 9835                      		CBI PINC, PC5
000307 c006                      		RJMP DONE569
                                 
                                 	acarreos:
000308 981b                      		CBI PINB, PB3
000309 981c                      		CBI PINB, PB4
00030a 981d                      		CBI PINB, PB5
00030b 9830                      		CBI PINC, PC0
00030c 9a35                      		SBI PINC, PC5
00030d c000                      		RJMP DONE569
                                 
                                 	
                                 	DONE569:
                                 		
00030e cd08                      		RJMP LOOP //Regresa a LOOP
                                 		
                                 
00030f cd07                      	RJMP LOOP  //Regresar a LOOP
                                 


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega328P" register use summary:
x  :   0 y  :   0 z  :   0 r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 
r5 :   0 r6 :   0 r7 :   0 r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 
r13:   0 r14:   0 r15:   0 r16: 349 r17:   2 r18:   5 r19:  38 r20:  38 
r21:   0 r22:  20 r23:   0 r24:   4 r25:   0 r26:   0 r27:   0 r28:   0 
r29:   0 r30:   0 r31:   0 
Registers used: 7 out of 35 (20.0%)

"ATmega328P" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   1 add   :   2 adiw  :   0 and   :   0 
andi  :   0 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :  80 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :  10 brpl  :   0 brsh  :   1 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :  52 cbr   :   0 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :   0 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   0 cpc   :   0 
cpi   :  81 cpse  :   0 dec   :  10 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    :  61 inc   :   0 jmp   :   0 
ld    :   0 ldd   :   0 ldi   : 119 lds   :   0 lpm   :   0 lsl   :   0 
lsr   :   0 mov   :   5 movw  :   0 mul   :   0 muls  :   0 mulsu :   0 
neg   :   0 nop   :   0 or    :   0 ori   :   0 out   : 158 pop   :   0 
push  :   0 rcall :   0 ret   :   0 reti  :   0 rjmp  : 155 rol   :   0 
ror   :   0 sbc   :   0 sbci  :   0 sbi   :  33 sbic  :   0 sbis  :   5 
sbiw  :   0 sbr   :   0 sbrc  :   0 sbrs  :   5 sec   :   0 seh   :   0 
sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :   0 std   :   0 sts   :   2 
sub   :   2 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 
Instructions used: 18 out of 113 (15.9%)

"ATmega328P" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000620   1568      0   1568   32768   4.8%
[.dseg] 0x000100 0x000100      0      0      0    2048   0.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
